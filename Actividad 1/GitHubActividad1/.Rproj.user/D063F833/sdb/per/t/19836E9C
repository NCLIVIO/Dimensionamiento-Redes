{
    "contents" : "\n#----------------------------------------------------------------------------REV\n\n##6.Predicting with Bass Model\n#This model was developed by Frank Bass in 1969 and it consists of a simple \n#differential equation that describes the process of how new products get adopted \n#in a population.  The basic premise of the model is that adopters can be classified\n#as innovators or as imitators and the speed and timing of adoption depends on their\n#degree of innovativeness and the degree of imitation among adopters.\n\n#**m** Total number of potential buyers of the new product\n#**p** The coefficient of innovation\n#**q** The coefficient of imitation\n\n#In order to test the model, linear regression estimates the parameters of the model\n\n#Operator 1\nAcum1<-tssubs1#cumsum(tssubs1)\nregpol1= lm(Acum1 ~ time + I(time^2))  # Linear regression\nparm1<-as.list(regpol1$coeff)\nparm1\n\na<-parm1$\"(Intercept)\"  \nb<-parm1$time*(1)           \nc<-parm1$\"I(time^2)\"    \n\nPar1<-data.frame(a=a,b=b,c=c)   # Parameters\n\nP<-c     #Bass Model Coefficients\nQ<-b+P\nM<-a/P\n\nM<-(-b-sqrt((b^2)-(4*a*c)))/(2*c)\nP<-a/M\nQ<--(c*M)\n\nCoeff1<-data.frame(P=P,Q=Q,M=M)\nCoeff1\n\nter1<-P*M\nter2<-(Q-P)*tssubs1\nter3<-(Q/M)*tssubs1^2\n\nfitbas<-ter1+ter2-ter3\nfitbas\n\n\n\n\n\n#Operator 2\nregpol2= lm(tstrain2 ~ time + I(time^2))  # Linear regression\nparm2<-as.list(regpol2$coeff)\n\na<-parm2$\"(Intercept)\"  \nb<-parm2$time*(1)           \nc<-parm2$\"I(time^2)\"    \n\nPar2<-data.frame(a=a,b=b,c=c)   # Parameters\n\nP<-c     #Bass Model Coefficients\nQ<-b+P\nM<-a/P\n\n#M<-(-b-sqrt((b^2)-(4*a*c)))/(2*c)\n#P<-a/M\n#Q<--c*M\n\nCoeff2<-data.frame(P=P,Q=Q,M=M)\n\n#Operator 3\nregpol3= lm(tstrain3 ~ time + I(time^2))  # Linear regression\nparm3<-as.list(regpol3$coeff)\n\na<-parm3$\"(Intercept)\"  \nb<-parm3$time*(1)           \nc<-parm3$\"I(time^2)\"    \n\nPar3<-data.frame(a=a,b=b,c=c)   # Parameters\n\nP<-c     #Bass Model Coefficients\nQ<-b+P\nM<-a/P\n\n#M<-(-b-sqrt((b^2)-(4*a*c)))/(2*c)\n#P<-a/M\n#Q<--c*M\n\nCoeff3<-data.frame(P=P,Q=Q,M=M)\n\n#The coefficient p is called the coefficient of innovation, external influence or \n#advertising effect. The coefficient q is called the coefficient of imitation, \n#internal influence or word-of-mouth effect.\n\n#The Sales Growth Model for Durables are determinated by:\n#**S(t) = Innovation effect + Imitation effect**\n\n#where:\n#S(t) Sales at time t\n#Innovation effect = p * Remaining Potencial\n#Imitation effect = q * Adopters *Remaining Potential\n#Remaining Potencial = Total Potential - Q Adopters\n\n#Remaining Potencial\nRem<-2-tstrain\n\n#Innovation effect\npe<-P*Rem\n\n#Imitation effect\nqe<-Q*tstrain*Rem\n\n#Sales at time t\nsales<-pe+qe\n\n#The Bass Model proposes that the likelihood that someone in the population will\n#purchase a new product at a particular time t given that she has not already\n#purchased the product until then, is summarized by the following simplification \n#mathematical.\n\n#**n(t) = pm + (q - p) [N(t)] -q/m * [N(t)]2**\n\n# where:\n#  n(t) = basic diffusion equation for predicting new product sales\n#  N(t) = Adopters at time t\n\nter1<-P*M\nter2<-(Q-P)*tsset\nter3<-(Q/M)*tsset^2\n\nfitbas<-ter1+ter2-ter3\nfitbas\n\n\n#------------------------------------------------------------------------\n###Parabolic Model\n#Operator 1\ntime<-1:hi\nfitpar1=lm(tsset1 ~ time + I(time^2))  #Model\npredpar1<-predict(fitpar1)             #Prediction\nforepar1<-forecast(predpar1,h=seth-3)  #Forecast\n\n#Operator 2\ntime<-1:hi\nfitpar2=lm(tsset2 ~ time + I(time^2))  #Model\npredpar2<-predict(fitpar2)             #Prediction\nforepar2<-forecast(predpar2,h=seth-3)  #Forecast\n\n#Operator 3\ntime<-1:hi\nfitpar3=lm(tsset3 ~ time + I(time^2))  #Model \npredpar3<-predict(fitpar3)             #Prediction\nforepar3<-forecast(predpar3,h=seth-3)  #Forecast\n\n#Operator 1\ndata_predpar1<-data.frame(predpar1) #Parabolic predictions\nset2a<-data.frame(forepar1)\npara<-data.frame(Fore_Par1=set2a$Point.Forecast)\n#Operator 2\ndata_predpar2<-data.frame(predpar2) #Parabolic predictions\nset2b<-data.frame(forepar2)\nparb<-data.frame(Fore_Par2=set2b$Point.Forecast)\n#Operator 3\ndata_predar3<-data.frame(predpar3) #Parabolic predictions\nset2c<-data.frame(forepar3)\nparc<-data.frame(Fore_Par3=set2c$Point.Forecast)\n\n\n#-----------------------------------------------------PRUEBAS RONALD\nset.seed(2321)\n",
    "created" : 1421970807568.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3557512054",
    "id" : "19836E9C",
    "lastKnownWriteTime" : 1426473927,
    "path" : "~/Maestria/Actividad 1. Modelos de Demanda/Dimensionamiento-de-Redes_Bkup/Pruebas.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}