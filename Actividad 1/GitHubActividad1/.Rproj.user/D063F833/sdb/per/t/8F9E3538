{
    "contents" : "\n# FORECASTING DEMAND MODELS\n#By: Natalia Clivio\n#nclivio@gmail.com\n#\n#---------------------------Load and clean data---------------------------------\n#The file loaded is the telecommunication companiesÂ´s subscribers by   ten years,\n#for each service provided by this companies. The service offering are:\n#Internet residential and business, Video on demand and VoIP.\n\nlibrary(caret)\nlibrary(forecast)\nlibrary(growthmodels)\n\nsubs<-read.csv(\"C:/Users/NataliaA/Documents/DataR/Subscribers_CV.csv\",header=TRUE,\n               sep=\";\",na.strings=\"NA\",dec=\",\")\n\nyears<-na.exclude(subs[1])\noper1<-na.exclude(subs[1:5])\noper2<-data.frame(years,na.exclude(subs[6:9]))\noper3<-data.frame(years,na.exclude(subs[10:13]))\n\n#---------------------------Data Preparation------------------------------------\nset.seed(2321)  #No random subset\n\n#Operator 1\ninTrain<-createDataPartition(y=oper1$Year, p=0.75, list=FALSE)\ntrain1<-oper1[inTrain,]\ntest1<-oper1[-inTrain,]\n\n#Operator 2\ninTrain<-createDataPartition(y=oper2$Year, p=0.75, list=FALSE)\ntrain2<-oper2[inTrain,]\ntest2<-oper2[-inTrain,]\n\n#Operator 3\ninTrain<-createDataPartition(y=oper3$Year, p=0.75, list=FALSE)\ntrain3<-oper3[inTrain,]\ntest3<-oper3[-inTrain,]\n\nyear<-years$Year\nstart<-year[1]\nhi<-dim(years)[1]\nend<-year[hi]\nyear1<-year[round(hi*0.70)]\n\nseth<-8   ##Set predictions quantity\nf1<-end+1 #Q forecast\nf2<-end+5 #Q forecast\n\ntime<-1:hi\n\n#----------------Demand Models for Internet  Residential Subscribers--------------\n\n##Subset data\n#Operator 1\ntrainres1<-data.frame(Year=train1$Year,Subs=train1$Internet_Res1)\ntestres1<-data.frame(Year=test1$Year,Subs=test1$Internet_Res1)\ndatares1<-data.frame(Year=year,Subs=oper1$Internet_Res1)\n#Operator 2\ntrainres2<-data.frame(Year=train2$Year,Subs=train2$Internet_Res2)\ntestres2<-data.frame(Year=test2$Year,Subs=test2$Internet_Res2)\ndatares2<-data.frame(Year=year,Subs=oper2$Internet_Res2)\n#Operator 3\ntrainres3<-data.frame(Year=train3$Year,Subs=train3$Internet_Res3)\ntestres3<-data.frame(Year=test3$Year,Subs=test3$Internet_Res3)\ndatares3<-data.frame(Year=year,Subs=oper3$Internet_Res3)\n\n\n##1. Predicting with Random Forest InRes\n#Operator 1\nmodrf1<-train(Subs~.,data=trainres1,method=\"rf\",prox=TRUE)  #Model\npredrf1<- predict(modrf1,datares1)                          #Prediction\nforerf1<-forecast(predrf1,h=seth)                           #Forecast\n\n#Operator2\nmodrf2<-train(Subs~.,data=trainres2,method=\"rf\",prox=TRUE)  #Model\npredrf2<- predict(modrf2, datares2)                         #Prediction\nforerf2<-forecast(predrf2,h=seth)                           #Forecast\n\n#Operator 3\nmodrf3<-train(Subs~.,data=trainres3,method=\"rf\",prox=TRUE)  #Model\npredrf3<- predict(modrf3, datares3)                         #Prediction\nforerf3<-forecast(predrf3,h=seth)                           #Forecast\n\n\n##2. Predicting with Boosting Generalized Additive Model InRes\n#Operator 1\nmodbs1 <- train(Subs ~ ., method = \"gamboost\", data = trainres1) \npredbs1 <- predict(modbs1, datares1)\nforebs1<-forecast(predbs1,h=seth) \n\n#Operator 2\nmodbs2 <- train(Subs ~ ., method = \"gamboost\", data = trainres2) \npredbs2 <- predict(modbs2, datares2)\nforebs2<-forecast(predbs2,h=seth) \n\n#Operator 3\nmodbs3 <- train(Subs ~ ., method = \"gamboost\", data = trainres3) \npredbs3 <- predict(modbs3, datares3)\nforebs3<-forecast(predbs3,h=seth)\n\n#Predictions\ndata_pred1a<-data.frame(datares1,Rf1=predrf1,Bs1=predbs1)           \ndata_pred2a<-data.frame(datares2,Rf2=predrf2,Bs2=predbs2)\ndata_pred3a<-data.frame(datares3,Rf3=predrf3,Bs3=predbs3) \n\n##Forecasting for 5 Years\n\nsetrf1<-data.frame(forerf1)  #randon forest predictions Op1\nrfa<-data.frame(Fore_Rf1=setrf1$Point.Forecast[4:8])\nsetrf2<-data.frame(forerf2)  #randon forest predictions Op2\nrfb<-data.frame(Fore_Rf2=setrf2$Point.Forecast[4:8])\nsetrf3<-data.frame(forerf3)  #randon forest predictions Op3\nrfc<-data.frame(Fore_Rf3=setrf3$Point.Forecast[4:8])\n\nsetbs1<-data.frame(forebs1)  #Boosting predictions Op1\nbsa<-data.frame(Fore_Bs1=setbs1$Point.Forecast[4:8])\nsetbs2<-data.frame(forebs2)  #Boosting predictions Op2\nbsb<-data.frame(Fore_Bs2=setbs2$Point.Forecast[4:8])\nsetbs3<-data.frame(forebs3)  #Boosting predictions Op3\nbsc<-data.frame(Fore_Bs3=setbs3$Point.Forecast[4:8])\n\nfore1a<-data.frame(Year=f1:f2,rfa,bsa)   #Operator 1\nfore1b<-data.frame(Year=f1:f2,rfb,bsb)   #Operator 2\nfore1c<-data.frame(Year=f1:f2,rfc,bsc)   #Operator 3\n\n\n##3. Predicting with Growth curves InRes\n#Simple random sampling of time series is probably not the best way to resample \n#times series data. Hyndman and Athanasopoulos (2013)) discuss rolling forecasting \n#origin techniques that move the training and test sets in time .\n\n#Operator1\ntssubs1<-ts(oper1$Internet_Res1,start=start,end=end) #Time serie\ntsset1<-tssubs1\ntstrain1<-window(tsset1,start=start,end=year1)        #Training and Testing data\ntstest1<-window(tsset1,start=year1,end=end)       \n\n#Operator2\ntssubs2<-ts(oper2$Internet_Res2,start=start,end=end) #Time serie\ntsset2<-tssubs2/1\ntstrain2<-window(tsset2,start=start,end=year1)        #Training and Testing data\ntstest2<-window(tsset2,start=year1,end=end)       \n\n#Operator3\ntssubs3<-ts(oper3$Internet_Res3,start=start,end=end) #Time serie\ntsset3<-tssubs3/1\ntstrain3<-window(tsset3,start=start,end=year1)        #Training and Testing data\ntstest3<-window(tsset3,start=year1,end=end)       \n\n##Linear Model\n#Operator 1\nfitlm1<-tslm(tstrain1~trend)       #Model\npredlm1<-forecast(fitlm1, h=seth)  #Prediction\n#Operator 2\nfitlm2<-tslm(tstrain2~trend)       #Model\npredlm2<-forecast(fitlm2, h=seth)  #Prediction\n#Operator 3\nfitlm3<-tslm(tstrain3~trend)       #Model\npredlm3<-forecast(fitlm3, h=seth)  #Prediction\n\n##Parabolic Model\n#Operator 1\nfitpar1=lm(tsset1 ~ time + I(time^2))  #Model\npredpar1<-predict(fitpar1)             #Prediction\nforepar1<-forecast(predpar1,h=seth-3)  #Forecast\n#Operator 2\nfitpar2=lm(tsset2 ~ time + I(time^2))  #Model\npredpar2<-predict(fitpar2)             #Prediction\nforepar2<-forecast(predpar2,h=seth-3)  #Forecast\n#Operator 3\nfitpar3=lm(tsset3 ~ time + I(time^2))  #Model \npredpar3<-predict(fitpar3)             #Prediction\nforepar3<-forecast(predpar3,h=seth-3)  #Forecast\n\n##Exponential Model\n#Operator 1\nYexp1=lm(log(tsset1) ~ time)          #Transform\nparmexp1<-as.list(Yexp1$coeff)\nbetae1<- exp(parmexp1$\"(Intercept)\")  #growth range (a)\nke1<- parmexp1$time                   #growth rate (b)\nfitexp1<-betae1*exp(ke1*time)         #Model\npredexp1<-forecast(fitexp1,h=seth-3)\n\n#Operator 2\nYexp2=lm(log(tsset2) ~ time)          #Transform\nparmexp2<-as.list(Yexp2$coeff)\nbetae2<- exp(parmexp2$\"(Intercept)\")  #growth range (a)\nke2<- parmexp2$time                   #growth rate (b)\nfitexp2<-betae2*exp(ke2*time)         #Model\npredexp2<-forecast(fitexp2,h=seth-3)\n\n#Operator 3\nYexp3=lm(log(tsset3) ~ time)          #Transform\nparmexp3<-as.list(Yexp3$coeff)\nbetae3<- exp(parmexp3$\"(Intercept)\")  #growth range (a)\nke3<- parmexp3$time                   #growth rate (b)\nfitexp3<-betae3*exp(ke3*time)         #Model\npredexp3<-forecast(fitexp3,h=seth-3)\n\n\n#The predictions with growth curves are:\n\n#Operator 1\nset1a<-data.frame(predlm1)  #Linear predictions\nlma<-data.frame(Fore_Lin1=set1a$Point.Forecast[4:8])\ndata_predlm1<-data.frame(Lin1=c(fitlm1$fitted.values,set1a$Point.Forecast[1:3]))\n#Operator 2\nset2a<-data.frame(predlm2)  #Linear predictions\nlmb<-data.frame(Fore_Lin2=set2a$Point.Forecast[4:8])\ndata_predlm2<-data.frame(Lin2=c(fitlm2$fitted.values,set2a$Point.Forecast[1:3]))\n#Operator 3\nset3a<-data.frame(predlm3)  #Linear predictions\nlmc<-data.frame(Fore_Lin3=set3a$Point.Forecast[4:8])\ndata_predlm3<-data.frame(Lin3=c(fitlm3$fitted.values,set3a$Point.Forecast[1:3]))\n\n\n#Operator 1\ndata_predpar1<-data.frame(Par1=predpar1) #Parabolic predictions\nset2a<-data.frame(forepar1)\npara<-data.frame(Fore_Par1=set2a$Point.Forecast)\n#Operator 2\ndata_predpar2<-data.frame(Par2=predpar2) #Parabolic predictions\nset2b<-data.frame(forepar2)\nparb<-data.frame(Fore_Par2=set2b$Point.Forecast)\n#Operator 3\ndata_predpar3<-data.frame(Par3=predpar3) #Parabolic predictions\nset2c<-data.frame(forepar3)\nparc<-data.frame(Fore_Par3=set2c$Point.Forecast)\n\n\n#Operator 1\nset3a<-data.frame(predexp1)  #Exponential predictions\nexpa<-data.frame(Fore_Exp1=set3a$Point.Forecast)\ndata_predexp1<-data.frame(Exp1=fitexp1)\n#Operator 2\nset3b<-data.frame(predexp2)  #Exponential predictions\nexpb<-data.frame(Fore_Exp2=set3b$Point.Forecast)\ndata_predexp2<-data.frame(Exp2=fitexp2)\n#Operator 1\nset3c<-data.frame(predexp3)  #Exponential predictions\nexpc<-data.frame(Fore_Exp3=set3c$Point.Forecast)\ndata_predexp3<-data.frame(Exp3=fitexp3)\n\n\n##Sets of predictions\ndata_pred1b<-data.frame(data_predlm1,data_predpar1,data_predexp1)  #Operator 1\ndata_pred2b<-data.frame(data_predlm2,data_predpar2,data_predexp2)  #Operator 2\ndata_pred3b<-data.frame(data_predlm3,data_predpar3,data_predexp3)  #Operator 3\n\n##Forecasting for 5 Years\nfore2a<-data.frame(Year=f1:f2,lma,para,expa)   #Operator 1\nfore2b<-data.frame(lmb,parb,expb)              #Operator 2\nfore2c<-data.frame(lmc,parc,expc)              #Operator 3\n\n\n##4.Predicting with Logistic and Gompertz Model InRes\n\n##Logistic Model\n#Using the **growthmodels** package, with the *logistic* function to get the \n#logistic curve\n#**Usage**\n#logistic(t, alpha, beta, k)\n#**Arguments**\n#t time,x size, alpha upper asymptote, beta  growth range, k  growth rate\n\n#Operator 1\nalpha1<-tssubs1[hi] +0.5           #upper asymptote (M)\nY1<-log(alpha1/tssubs1-1)          #Transform\nReglm1<-tslm(Y1~trend)             #Lineal Regression\nparmlm1<-as.list(Reglm1$coeff)\n\nbeta1<- exp(parmlm1$\"(Intercept)\")  #growth range (a)\nk1<- -parmlm1$trend                 #growth rate (b)\nfitlog1 <- logistic(1:10, alpha1, beta1, k1)\npredlog1<-forecast(fitlog1,h=seth)\n\n#Operator 2\nalpha2<-tssubs2[hi] +0.5           #upper asymptote (M)\nY2<-log(alpha2/tssubs2-1)          #Transform\nReglm2<-tslm(Y2~trend)             #Lineal Regression\nparmlm2<-as.list(Reglm2$coeff)\n\nbeta2<- exp(parmlm2$\"(Intercept)\")  #growth range (a)\nk2<- -parmlm2$trend                 #growth rate (b)\nfitlog2 <- logistic(1:10, alpha2, beta2, k2)\npredlog2<-forecast(fitlog2,h=seth)\n\n#Operator 3\nalpha3<-tssubs3[hi] +0.5           #upper asymptote (M)\nY3<-log(alpha3/tssubs3-1)          #Transform\nReglm3<-tslm(Y3~trend)             #Lineal Regression\nparmlm3<-as.list(Reglm3$coeff)\n\nbeta3<- exp(parmlm3$\"(Intercept)\")  #growth range (a)\nk3<- -parmlm3$trend                 #growth rate (b)\nfitlog3 <- logistic(1:10, alpha3, beta3, k3)\npredlog3<-forecast(fitlog3,h=seth)\n\n#The predictions using logistic model are:\nset4a<-data.frame(predlog1)\nalog<-set4a$Point.Forecast   #Operator 1 predictions\nset4b<-data.frame(predlog2)\nblog<-set4b$Point.Forecast   #Operator 2 predictions\nset4c<-data.frame(predlog3)\nclog<-set4c$Point.Forecast   #Operator 3 predictions\n\ndata_predlog1<-data.frame(Log1=fitlog1)\ndata_predlog2<-data.frame(Log2=fitlog2)\ndata_predlog3<-data.frame(Log3=fitlog3)\n\n###Gompertz Model\n#Using the **growthmodels** package, Computes the Gompertz growth model\n#**Usage**\n#gompertz(t, alpha, beta, k)\n#**Arguments**\n#t     time\n#x     size\n#alpha upper asymptote\n#beta  growth displacement\n#k     growth rate\n\n#Operator 1\nalphag1<-tssubs1[hi] +5                 #upper asymptote (M)\nY1g<-log(log(alphag1/tssubs1))          #Transform\nReglmg1<-tslm(Y1g~trend)                #Lineal Regression\nparmglm1<-as.list(Reglmg1$coeff)\n\nbetag1<- exp(parmglm1$\"(Intercept)\")  #growth range (a)\nkg1<- -parmglm1$trend                 #growth rate (b)\nfitgom1 <- gompertz(1:10, alphag1, betag1, kg1)\npredgom1<-forecast(fitgom1,h=seth)\n\n#Operator 2\nalphag2<-tssubs2[hi] +5                 #upper asymptote (M)\nY2g<-log(log(alphag2/tssubs2))          #Transform\nReglmg2<-tslm(Y2g~trend)                #Lineal Regression\nparmglm2<-as.list(Reglmg2$coeff)\n\nbetag2<- exp(parmglm2$\"(Intercept)\")  #growth range (a)\nkg2<- -parmglm2$trend                 #growth rate (b)\nfitgom2 <- gompertz(1:10, alphag2, betag2, kg2)\npredgom2<-forecast(fitgom2,h=seth)\n\n#Operator 3\nalphag3<-tssubs3[hi] +5                 #upper asymptote (M)\nY3g<-log(log(alphag3/tssubs3))          #Transform\nReglmg3<-tslm(Y3g~trend)                #Lineal Regression\nparmglm3<-as.list(Reglmg3$coeff)\n\nbetag3<- exp(parmglm3$\"(Intercept)\")  #growth range (a)\nkg3<- -parmglm3$trend                 #growth rate (b)\nfitgom3 <- gompertz(1:10, alphag3, betag3, kg3)\npredgom3<-forecast(fitgom3,h=seth)\n\n#The predictions using gompertz model are:\nset5a<-data.frame(predgom1)\nagom<-set5a$Point.Forecast   #Operator 1 predictions\nset5b<-data.frame(predgom2)\nbgom<-set5b$Point.Forecast   #Operator 2 predictions\nset5c<-data.frame(predgom3)\ncgom<-set5c$Point.Forecast   #Operator 3 predictions\n\ndata_predgom1<-data.frame(Gom1=fitgom1)\ndata_predgom2<-data.frame(Gom2=fitgom2)\ndata_predgom3<-data.frame(Gom3=fitgom3)\n\n#Forecasting for 5 years\nfore3a<-data.frame(Fore_Log1=alog[1:5],Fore_Gom1=agom[1:5])\nfore3b<-data.frame(Fore_Log2=blog[1:5],Fore_Gom1=bgom[1:5])\nfore3c<-data.frame(Fore_Log3=clog[1:5],Fore_Gom1=cgom[1:5])\n\n\n##5.Performance Models for Internet Residential\n#Using the forecast package, the performance models are:\n#**(ME)**:Mean Error \n#**(RMSE)**:Root Mean Square Error\n#**(MAE)**: Mean Absolute Error\n#**(MPE)**: Mean Porcentual Error\n#**(MAPE)**: Mean Absolute Porcentual Error\n\n# Random Forest Model\nacc_a1<-accuracy(predrf1,datares1$Subs, test=NULL)  #Operator 1\nacc_a2<-accuracy(predrf2,datares2$Subs, test=NULL)  #Operator 2\nacc_a3<-accuracy(predrf3,datares3$Subs, test=NULL)  #Operator 3\n\n#Boosted Generalized Model\nacc_b1<-accuracy(predbs1,datares1$Subs, test=NULL) #Operator 1\nacc_b2<-accuracy(predbs2,datares2$Subs, test=NULL) #Operator 2\nacc_b3<-accuracy(predbs3,datares3$Subs, test=NULL) #Operator 3\n\n#Modelo Lineal\nacc_d1<-accuracy(predlm1) #Operator 1\nacc_d2<-accuracy(predlm2) #Operator 2\nacc_d3<-accuracy(predlm3) #Operator 3\n\n#Modelo ParabÃ³lico\nacc_e1<-accuracy(predpar1,tsset1)  #Operator 1\nacc_e2<-accuracy(predpar2,tsset2)  #Operator 2\nacc_e3<-accuracy(predpar3,tsset3)  #Operator 3\n\n#Modelo Exponencial\nacc_f1<-accuracy(predexp1)  #Operator 1 \nacc_f2<-accuracy(predexp2)  #Operator 2 \nacc_f3<-accuracy(predexp3)  #Operator 3 \n\n#Modelo LogÃ­stico\nacc_g1<-accuracy(predlog1) #Operator 1 \nacc_g2<-accuracy(predlog2) #Operator 2 \nacc_g3<-accuracy(predlog3) #Operator 3 \n\n#Modelo Gompertz\nacc_h1<-accuracy(predgom1) #Operator 1 \nacc_h2<-accuracy(predgom2) #Operator 2 \nacc_h3<-accuracy(predgom3) #Operator 3 \n\n#The performance sets are:\nModels<-c(\"Random forest\",\"Boosting\",\"Linear\",\"Parabolic\",\"Exponential\",\"Logistic\",\"Gompertz\")\n\n#Opereator 1 \nacc_all1a<-rbind(acc_a1,acc_b1) #Random forest and Boosted\naccd1<-acc_d1[1,1:5]  #Linear\nacce1<-acc_e1[1,1:5]  #Parabolic\naccf1<-acc_f1[1,1:5]  #Exponential\naccg1<-acc_g1[1,1:5]  #Logistic\nacch1<-acc_h1[1,1:5]  #Gompertz\nacc_all1b<-round(rbind(acc_all1a,accd1,acce1,accf1,accg1,acch1),2)\nperformIRes1<-data.frame(Models,acc_all1b)\n\n#Operator 2\nacc_all2a<-rbind(acc_a2,acc_b2)\naccd2<-acc_d2[1,1:5]\nacce2<-acc_e2[1,1:5]\naccf2<-acc_f2[1,1:5]\naccg2<-acc_g2[1,1:5]\nacch2<-acc_h2[1,1:5]\nacc_all2b<-round(rbind(acc_all2a,accd2,acce2,accf2,accg2,acch2),2)\nperformIRes2<-data.frame(Models,acc_all2b)\n\n#Operator 3\nacc_all3a<-rbind(acc_a3,acc_b3)\naccd3<-acc_d3[1,1:5]\nacce3<-acc_e3[1,1:5]\naccf3<-acc_f3[1,1:5]\naccg3<-acc_g3[1,1:5]\nacch3<-acc_h3[1,1:5]\nacc_all3b<-round(rbind(acc_all3a,accd3,acce3,accf3,accg3,acch3),2)\nperformIRes3<-data.frame(Models,acc_all3b)\n\n\n##Predictions Reports\n#Internet Residential Predictions by service provider\npredIRes1<-data.frame(data_pred1a,data_pred1b,data_predlog1,data_predgom1) #Operator 1 \npredIRes2<-data.frame(data_pred2a,data_pred2b,data_predlog2,data_predgom2) #Operator 2 \npredIRes3<-data.frame(data_pred3a,data_pred3b,data_predlog3,data_predgom3) #Operator 3 \n\n##Forecast Reports\n##Forecasting for 5 Years Internet Residential \nforeIRes1<-data.frame(fore1a,fore3a,fore2a)  #Operator 1\nforeIRes2<-data.frame(fore1b,fore3b,fore2b)  #Operator 2\nforeIRes3<-data.frame(fore1c,fore3c,fore2c)  #Operator 3\n\n#----------------Demand Models for Internet Bussines Subscribers---------------\n##Subset data\n#Operator 1\ntrainbus1<-data.frame(Year=train1$Year,Subs=train1$Internet_Bus1)\ntestbus1<-data.frame(Year=test1$Year,Subs=test1$Internet_Bus1)\ndatabus1<-data.frame(Year=year,Subs=oper1$Internet_Bus1)\n#Operator 2\ntrainbus2<-data.frame(Year=train2$Year,Subs=train2$Internet_Bus2)\ntestbus2<-data.frame(Year=test2$Year,Subs=test2$Internet_Bus2)\ndatabus2<-data.frame(Year=year,Subs=oper2$Internet_Bus2)\n#Operator 3\ntrainbus3<-data.frame(Year=train3$Year,Subs=train3$Internet_Bus3)\ntestbus3<-data.frame(Year=test3$Year,Subs=test3$Internet_Bus3)\ndatabus3<-data.frame(Year=year,Subs=oper3$Internet_Bus3)\n\n\n##1. Predicting with Random Forest InRes\n#Operator 1\nmodrf1<-train(Subs~.,data=trainbus1,method=\"rf\",prox=TRUE)  #Model\npredrf1<- predict(modrf1,databus1)                          #Prediction\nforerf1<-forecast(predrf1,h=seth)                           #Forecast\n\n#Operator2\nmodrf2<-train(Subs~.,data=trainbus2,method=\"rf\",prox=TRUE)  #Model\npredrf2<- predict(modrf2, databus2)                         #Prediction\nforerf2<-forecast(predrf2,h=seth)                           #Forecast\n\n#Operator 3\nmodrf3<-train(Subs~.,data=trainbus3,method=\"rf\",prox=TRUE)  #Model\npredrf3<- predict(modrf3, databus3)                         #Prediction\nforerf3<-forecast(predrf3,h=seth)                           #Forecast\n\n\n##2. Predicting with Boosting Generalized Additive Model InRes\n#Operator 1\nmodbs1 <- train(Subs ~ ., method = \"gamboost\", data = trainbus1) \npredbs1 <- predict(modbs1, databus1)\nforebs1<-forecast(predbs1,h=seth) \n\n#Operator 2\nmodbs2 <- train(Subs ~ ., method = \"gamboost\", data = trainbus2) \npredbs2 <- predict(modbs2, databus2)\nforebs2<-forecast(predbs2,h=seth) \n\n#Operator 3\nmodbs3 <- train(Subs ~ ., method = \"gamboost\", data = trainbus3) \npredbs3 <- predict(modbs3, databus3)\nforebs3<-forecast(predbs3,h=seth)\n\n#Predictions\ndata_pred1a<-data.frame(databus1,Rf1=predrf1,Bs1=predbs1)          \ndata_pred2a<-data.frame(databus2,Rf2=predrf2,Bs2=predbs2)\ndata_pred3a<-data.frame(databus3,Rf3=predrf3,Bs3=predbs3) \n\n##Forecasting for 5 Years\n\nsetrf1<-data.frame(forerf1)  #randon forest predictions Op1\nrfa<-data.frame(Fore_Rf1=setrf1$Point.Forecast[4:8])\nsetrf2<-data.frame(forerf2)  #randon forest predictions Op2\nrfb<-data.frame(Fore_Rf2=setrf2$Point.Forecast[4:8])\nsetrf3<-data.frame(forerf3)  #randon forest predictions Op3\nrfc<-data.frame(Fore_Rf3=setrf3$Point.Forecast[4:8])\n\nsetbs1<-data.frame(forebs1)  #Boosting predictions Op1\nbsa<-data.frame(Fore_Bs1=setbs1$Point.Forecast[4:8])\nsetbs2<-data.frame(forebs2)  #Boosting predictions Op2\nbsb<-data.frame(Fore_Bs2=setbs2$Point.Forecast[4:8])\nsetbs3<-data.frame(forebs3)  #Boosting predictions Op3\nbsc<-data.frame(Fore_Bs3=setbs3$Point.Forecast[4:8])\n\nfore1a<-data.frame(Year=f1:f2,rfa,bsa)   #Operator 1\nfore1b<-data.frame(Year=f1:f2,rfb,bsb)   #Operator 2\nfore1c<-data.frame(Year=f1:f2,rfc,bsc)   #Operator 3\n\n\n##3. Predicting with Growth curves InBus\n#Simple random sampling of time series is probably not the best way to resample \n#times series data. Hyndman and Athanasopoulos (2013)) discuss rolling forecasting \n#origin techniques that move the training and test sets in time .\n\n#Operator1\ntssubs1<-ts(oper1$Internet_Bus1,start=start,end=end) #Time serie\ntsset1<-tssubs1\ntstrain1<-window(tsset1,start=start,end=year1)        #Training and Testing data\ntstest1<-window(tsset1,start=year1,end=end)       \n\n#Operator2\ntssubs2<-ts(oper2$Internet_Bus2,start=start,end=end) #Time serie\ntsset2<-tssubs2/1\ntstrain2<-window(tsset2,start=start,end=year1)        #Training and Testing data\ntstest2<-window(tsset2,start=year1,end=end)       \n\n#Operator3\ntssubs3<-ts(oper3$Internet_Bus3,start=start,end=end) #Time serie\ntsset3<-tssubs3/1\ntstrain3<-window(tsset3,start=start,end=year1)        #Training and Testing data\ntstest3<-window(tsset3,start=year1,end=end)       \n\n##Linear Model\n#Operator 1\nfitlm1<-tslm(tstrain1~trend)       #Model\npredlm1<-forecast(fitlm1, h=seth)  #Prediction\n#Operator 2\nfitlm2<-tslm(tstrain2~trend)       #Model\npredlm2<-forecast(fitlm2, h=seth)  #Prediction\n#Operator 3\nfitlm3<-tslm(tstrain3~trend)       #Model\npredlm3<-forecast(fitlm3, h=seth)  #Prediction\n\n##Parabolic Model\n#Operator 1\nfitpar1=lm(tsset1 ~ time + I(time^2))  #Model\npredpar1<-predict(fitpar1)             #Prediction\nforepar1<-forecast(predpar1,h=seth-3)  #Forecast\n#Operator 2\nfitpar2=lm(tsset2 ~ time + I(time^2))  #Model\npredpar2<-predict(fitpar2)             #Prediction\nforepar2<-forecast(predpar2,h=seth-3)  #Forecast\n#Operator 3\nfitpar3=lm(tsset3 ~ time + I(time^2))  #Model \npredpar3<-predict(fitpar3)             #Prediction\nforepar3<-forecast(predpar3,h=seth-3)  #Forecast\n\n##Exponential Model\n#Operator 1\nYexp1=lm(log(tsset1) ~ time)          #Transform\nparmexp1<-as.list(Yexp1$coeff)\nbetae1<- exp(parmexp1$\"(Intercept)\")  #growth range (a)\nke1<- parmexp1$time                   #growth rate (b)\nfitexp1<-betae1*exp(ke1*time)         #Model\npredexp1<-forecast(fitexp1,h=seth-3)\n\n#Operator 2\nYexp2=lm(log(tsset2) ~ time)          #Transform\nparmexp2<-as.list(Yexp2$coeff)\nbetae2<- exp(parmexp2$\"(Intercept)\")  #growth range (a)\nke2<- parmexp2$time                   #growth rate (b)\nfitexp2<-betae2*exp(ke2*time)         #Model\npredexp2<-forecast(fitexp2,h=seth-3)\n\n#Operator 3\nYexp3=lm(log(tsset3) ~ time)          #Transform\nparmexp3<-as.list(Yexp3$coeff)\nbetae3<- exp(parmexp3$\"(Intercept)\")  #growth range (a)\nke3<- parmexp3$time                   #growth rate (b)\nfitexp3<-betae3*exp(ke3*time)         #Model\npredexp3<-forecast(fitexp3,h=seth-3)\n\n\n#The predictions with growth curves are:\n\n#Operator 1\nset1a<-data.frame(predlm1)  #Linear predictions\nlma<-data.frame(Fore_Lin1=set1a$Point.Forecast[4:8])\ndata_predlm1<-data.frame(Lin1=c(fitlm1$fitted.values,set1a$Point.Forecast[1:3]))\n#Operator 2\nset2a<-data.frame(predlm2)  #Linear predictions\nlmb<-data.frame(Fore_Lin2=set2a$Point.Forecast[4:8])\ndata_predlm2<-data.frame(Lin2=c(fitlm2$fitted.values,set2a$Point.Forecast[1:3]))\n#Operator 3\nset3a<-data.frame(predlm3)  #Linear predictions\nlmc<-data.frame(Fore_Lin3=set3a$Point.Forecast[4:8])\ndata_predlm3<-data.frame(Lin3=c(fitlm3$fitted.values,set3a$Point.Forecast[1:3]))\n\n\n#Operator 1\ndata_predpar1<-data.frame(Par1=predpar1) #Parabolic predictions\nset2a<-data.frame(forepar1)\npara<-data.frame(Fore_Par1=set2a$Point.Forecast)\n#Operator 2\ndata_predpar2<-data.frame(Par2=predpar2) #Parabolic predictions\nset2b<-data.frame(forepar2)\nparb<-data.frame(Fore_Par2=set2b$Point.Forecast)\n#Operator 3\ndata_predpar3<-data.frame(Par3=predpar3) #Parabolic predictions\nset2c<-data.frame(forepar3)\nparc<-data.frame(Fore_Par3=set2c$Point.Forecast)\n\n\n#Operator 1\nset3a<-data.frame(predexp1)  #Exponential predictions\nexpa<-data.frame(Fore_Exp1=set3a$Point.Forecast)\ndata_predexp1<-data.frame(Exp1=fitexp1)\n#Operator 2\nset3b<-data.frame(predexp2)  #Exponential predictions\nexpb<-data.frame(Fore_Exp2=set3b$Point.Forecast)\ndata_predexp2<-data.frame(Exp2=fitexp2)\n#Operator 1\nset3c<-data.frame(predexp3)  #Exponential predictions\nexpc<-data.frame(Fore_Exp3=set3c$Point.Forecast)\ndata_predexp3<-data.frame(Exp3=fitexp3)\n\n\n##Sets of predictions\ndata_pred1b<-data.frame(data_predlm1,data_predpar1,data_predexp1)  #Operator 1\ndata_pred2b<-data.frame(data_predlm2,data_predpar2,data_predexp2)  #Operator 2\ndata_pred3b<-data.frame(data_predlm3,data_predpar3,data_predexp3)  #Operator 3\n\n##Forecasting for 5 Years\nfore2a<-data.frame(Year=f1:f2,lma,para,expa)   #Operator 1\nfore2b<-data.frame(lmb,parb,expb)              #Operator 2\nfore2c<-data.frame(lmc,parc,expc)              #Operator 3\n\n\n##4.Predicting with Logistic and Gompertz Model InBus\n\n##Logistic Model\n#Operator 1\nalpha1<-tssubs1[hi] +0.5           #upper asymptote (M)\nY1<-log(alpha1/tssubs1-1)          #Transform\nReglm1<-tslm(Y1~trend)             #Lineal Regression\nparmlm1<-as.list(Reglm1$coeff)\n\nbeta1<- exp(parmlm1$\"(Intercept)\")  #growth range (a)\nk1<- -parmlm1$trend                 #growth rate (b)\nfitlog1 <- logistic(1:10, alpha1, beta1, k1)\npredlog1<-forecast(fitlog1,h=seth)\n\n#Operator 2\nalpha2<-tssubs2[hi] +0.5           #upper asymptote (M)\nY2<-log(alpha2/tssubs2-1)          #Transform\nReglm2<-tslm(Y2~trend)             #Lineal Regression\nparmlm2<-as.list(Reglm2$coeff)\n\nbeta2<- exp(parmlm2$\"(Intercept)\")  #growth range (a)\nk2<- -parmlm2$trend                 #growth rate (b)\nfitlog2 <- logistic(1:10, alpha2, beta2, k2)\npredlog2<-forecast(fitlog2,h=seth)\n\n#Operator 3\nalpha3<-tssubs3[hi] +0.5           #upper asymptote (M)\nY3<-log(alpha3/tssubs3-1)          #Transform\nReglm3<-tslm(Y3~trend)             #Lineal Regression\nparmlm3<-as.list(Reglm3$coeff)\n\nbeta3<- exp(parmlm3$\"(Intercept)\")  #growth range (a)\nk3<- -parmlm3$trend                 #growth rate (b)\nfitlog3 <- logistic(1:10, alpha3, beta3, k3)\npredlog3<-forecast(fitlog3,h=seth)\n\n#The predictions using logistic model are:\nset4a<-data.frame(predlog1)\nalog<-set4a$Point.Forecast   #Operator 1 predictions\nset4b<-data.frame(predlog2)\nblog<-set4b$Point.Forecast   #Operator 2 predictions\nset4c<-data.frame(predlog3)\nclog<-set4c$Point.Forecast   #Operator 3 predictions\n\ndata_predlog1<-data.frame(Log1=fitlog1)\ndata_predlog2<-data.frame(Log2=fitlog2)\ndata_predlog3<-data.frame(Log3=fitlog3)\n\n###Gompertz Model\n\n#Operator 1\nalphag1<-tssubs1[hi] +5                 #upper asymptote (M)\nY1g<-log(log(alphag1/tssubs1))          #Transform\nReglmg1<-tslm(Y1g~trend)                #Lineal Regression\nparmglm1<-as.list(Reglmg1$coeff)\n\nbetag1<- exp(parmglm1$\"(Intercept)\")  #growth range (a)\nkg1<- -parmglm1$trend                 #growth rate (b)\nfitgom1 <- gompertz(1:10, alphag1, betag1, kg1)\npredgom1<-forecast(fitgom1,h=seth)\n\n#Operator 2\nalphag2<-tssubs2[hi] +5                 #upper asymptote (M)\nY2g<-log(log(alphag2/tssubs2))          #Transform\nReglmg2<-tslm(Y2g~trend)                #Lineal Regression\nparmglm2<-as.list(Reglmg2$coeff)\n\nbetag2<- exp(parmglm2$\"(Intercept)\")  #growth range (a)\nkg2<- -parmglm2$trend                 #growth rate (b)\nfitgom2 <- gompertz(1:10, alphag2, betag2, kg2)\npredgom2<-forecast(fitgom2,h=seth)\n\n#Operator 3\nalphag3<-tssubs3[hi] +5                 #upper asymptote (M)\nY3g<-log(log(alphag3/tssubs3))          #Transform\nReglmg3<-tslm(Y3g~trend)                #Lineal Regression\nparmglm3<-as.list(Reglmg3$coeff)\n\nbetag3<- exp(parmglm3$\"(Intercept)\")  #growth range (a)\nkg3<- -parmglm3$trend                 #growth rate (b)\nfitgom3 <- gompertz(1:10, alphag3, betag3, kg3)\npredgom3<-forecast(fitgom3,h=seth)\n\n#The predictions using gompertz model are:\nset5a<-data.frame(predgom1)\nagom<-set5a$Point.Forecast   #Operator 1 predictions\nset5b<-data.frame(predgom2)\nbgom<-set5b$Point.Forecast   #Operator 2 predictions\nset5c<-data.frame(predgom3)\ncgom<-set5c$Point.Forecast   #Operator 3 predictions\n\ndata_predgom1<-data.frame(Gom1=fitgom1)\ndata_predgom2<-data.frame(Gom2=fitgom2)\ndata_predgom3<-data.frame(Gom3=fitgom3)\n\n#Forecasting for 5 years\nfore3a<-data.frame(Fore_Log1=alog[1:5],Fore_Gom1=agom[1:5])\nfore3b<-data.frame(Fore_Log2=blog[1:5],Fore_Gom1=bgom[1:5])\nfore3c<-data.frame(Fore_Log3=clog[1:5],Fore_Gom1=cgom[1:5])\n\n\n##5.Performance Models for Internet Bussines\n#Using the forecast package, the performance models are:\n#**(ME)**:Mean Error \n#**(RMSE)**:Root Mean Square Error\n#**(MAE)**: Mean Absolute Error\n#**(MPE)**: Mean Porcentual Error\n#**(MAPE)**: Mean Absolute Porcentual Error\n\n# Random Forest Model\nacc_a1<-accuracy(predrf1,databus1$Subs, test=NULL)  #Operator 1\nacc_a2<-accuracy(predrf2,databus2$Subs, test=NULL)  #Operator 2\nacc_a3<-accuracy(predrf3,databus3$Subs, test=NULL)  #Operator 3\n\n#Boosted Generalized Model\nacc_b1<-accuracy(predbs1,databus1$Subs, test=NULL) #Operator 1\nacc_b2<-accuracy(predbs2,databus2$Subs, test=NULL) #Operator 2\nacc_b3<-accuracy(predbs3,databus3$Subs, test=NULL) #Operator 3\n\n#Modelo Lineal\nacc_d1<-accuracy(predlm1) #Operator 1\nacc_d2<-accuracy(predlm2) #Operator 2\nacc_d3<-accuracy(predlm3) #Operator 3\n\n#Modelo ParabÃ³lico\nacc_e1<-accuracy(predpar1,tsset1)  #Operator 1\nacc_e2<-accuracy(predpar2,tsset2)  #Operator 2\nacc_e3<-accuracy(predpar3,tsset3)  #Operator 3\n\n#Modelo Exponencial\nacc_f1<-accuracy(predexp1)  #Operator 1 \nacc_f2<-accuracy(predexp2)  #Operator 2 \nacc_f3<-accuracy(predexp3)  #Operator 3 \n\n#Modelo LogÃ­stico\nacc_g1<-accuracy(predlog1) #Operator 1 \nacc_g2<-accuracy(predlog2) #Operator 2 \nacc_g3<-accuracy(predlog3) #Operator 3 \n\n#Modelo Gompertz\nacc_h1<-accuracy(predgom1) #Operator 1 \nacc_h2<-accuracy(predgom2) #Operator 2 \nacc_h3<-accuracy(predgom3) #Operator 3 \n\n#The performance sets are:\nModels<-c(\"Random forest\",\"Boosting\",\"Linear\",\"Parabolic\",\"Exponential\",\"Logistic\",\"Gompertz\")\n\n#Opereator 1 \nacc_all1a<-rbind(acc_a1,acc_b1) #Random forest and Boosted\naccd1<-acc_d1[1,1:5]  #Linear\nacce1<-acc_e1[1,1:5]  #Parabolic\naccf1<-acc_f1[1,1:5]  #Exponential\naccg1<-acc_g1[1,1:5]  #Logistic\nacch1<-acc_h1[1,1:5]  #Gompertz\nacc_all1b<-round(rbind(acc_all1a,accd1,acce1,accf1,accg1,acch1),2)\nperformIBus1<-data.frame(Models,acc_all1b)\n\n#Operator 2\nacc_all2a<-rbind(acc_a2,acc_b2)\naccd2<-acc_d2[1,1:5]\nacce2<-acc_e2[1,1:5]\naccf2<-acc_f2[1,1:5]\naccg2<-acc_g2[1,1:5]\nacch2<-acc_h2[1,1:5]\nacc_all2b<-round(rbind(acc_all2a,accd2,acce2,accf2,accg2,acch2),2)\nperformIBus2<-data.frame(Models,acc_all2b)\n\n#Operator 3\nacc_all3a<-rbind(acc_a3,acc_b3)\naccd3<-acc_d3[1,1:5]\nacce3<-acc_e3[1,1:5]\naccf3<-acc_f3[1,1:5]\naccg3<-acc_g3[1,1:5]\nacch3<-acc_h3[1,1:5]\nacc_all3b<-round(rbind(acc_all3a,accd3,acce3,accf3,accg3,acch3),2)\nperformIBus3<-data.frame(Models,acc_all3b)\n\n\n##Predictions Reports\n#Internet Bussines Predictions by service provider\npredIBus1<-data.frame(data_pred1a,data_pred1b,data_predlog1,data_predgom1) #Operator 1 \npredIBus2<-data.frame(data_pred2a,data_pred2b,data_predlog2,data_predgom2) #Operator 2 \npredIBus3<-data.frame(data_pred3a,data_pred3b,data_predlog3,data_predgom3) #Operator 3 \n\n##Forecast Reports\n##Forecasting for 5 Years Internet Residential \nforeIBus1<-data.frame(fore1a,fore3a,fore2a)  #Operator 1\nforeIBus2<-data.frame(fore1b,fore3b,fore2b)  #Operator 2\nforeIBus3<-data.frame(fore1c,fore3c,fore2c)  #Operator 3\n\n#----------------Demand Models for VoD Subscribers-------------------\n##Subset data\ndataVoD1<-data.frame(Year=year,Subs=oper1$VoD1)  #Operator 1\ntssubs1<-ts(oper1$VoD1,start=start,end=end) #Time serie\ndataVoD2<-data.frame(Year=year,Subs=oper2$VoD2)  #Operator 2\ntssubs2<-ts(oper2$VoD2,start=start,end=end) #Time serie\ndataVoD3<-data.frame(Year=year,Subs=oper3$VoD3)  #Operator 3\ntssubs3<-ts(oper3$VoD3,start=start,end=end) #Time serie\n\n\n##4.Predicting with Logistic and Gompertz Model VoD\n\n##Logistic Model\n#Operator 1\nalpha1<-tssubs1[hi] +0.5           #upper asymptote (M)\nY1<-log(alpha1/tssubs1-1)          #Transform\nReglm1<-tslm(Y1~trend)             #Lineal Regression\nparmlm1<-as.list(Reglm1$coeff)\n\nbeta1<- exp(parmlm1$\"(Intercept)\")  #growth range (a)\nk1<- -parmlm1$trend                 #growth rate (b)\nfitlog1 <- logistic(1:10, alpha1, beta1, k1)\npredlog1<-forecast(fitlog1,h=seth)\n\n#Operator 2\nalpha2<-tssubs2[hi] +0.5           #upper asymptote (M)\nY2<-log(alpha2/tssubs2-1)          #Transform\nReglm2<-tslm(Y2~trend)             #Lineal Regression\nparmlm2<-as.list(Reglm2$coeff)\n\nbeta2<- exp(parmlm2$\"(Intercept)\")  #growth range (a)\nk2<- -parmlm2$trend                 #growth rate (b)\nfitlog2 <- logistic(1:10, alpha2, beta2, k2)\npredlog2<-forecast(fitlog2,h=seth)\n\n#Operator 3\nalpha3<-tssubs3[hi] +0.5           #upper asymptote (M)\nY3<-log(alpha3/tssubs3-1)          #Transform\nReglm3<-tslm(Y3~trend)             #Lineal Regression\nparmlm3<-as.list(Reglm3$coeff)\n\nbeta3<- exp(parmlm3$\"(Intercept)\")  #growth range (a)\nk3<- -parmlm3$trend                 #growth rate (b)\nfitlog3 <- logistic(1:10, alpha3, beta3, k3)\npredlog3<-forecast(fitlog3,h=seth)\n\n#The predictions using logistic model are:\nset4a<-data.frame(predlog1)\nalog<-set4a$Point.Forecast   #Operator 1 predictions\nset4b<-data.frame(predlog2)\nblog<-set4b$Point.Forecast   #Operator 2 predictions\nset4c<-data.frame(predlog3)\nclog<-set4c$Point.Forecast   #Operator 3 predictions\n\ndata_predlog1<-data.frame(Log1=fitlog1)\ndata_predlog2<-data.frame(Log2=fitlog2)\ndata_predlog3<-data.frame(Log3=fitlog3)\n\n###Gompertz Model\n#Using the **growthmodels** package, Computes the Gompertz growth model\n#**Usage**\n#gompertz(t, alpha, beta, k)\n#**Arguments**\n#t     time\n#x     size\n#alpha upper asymptote\n#beta  growth displacement\n#k     growth rate\n\n#Operator 1\nalphag1<-tssubs1[hi] +5                 #upper asymptote (M)\nY1g<-log(log(alphag1/tssubs1))          #Transform\nReglmg1<-tslm(Y1g~trend)                #Lineal Regression\nparmglm1<-as.list(Reglmg1$coeff)\n\nbetag1<- exp(parmglm1$\"(Intercept)\")  #growth range (a)\nkg1<- -parmglm1$trend                 #growth rate (b)\nfitgom1 <- gompertz(1:10, alphag1, betag1, kg1)\npredgom1<-forecast(fitgom1,h=seth)\n\n#Operator 2\nalphag2<-tssubs2[hi] +5                 #upper asymptote (M)\nY2g<-log(log(alphag2/tssubs2))          #Transform\nReglmg2<-tslm(Y2g~trend)                #Lineal Regression\nparmglm2<-as.list(Reglmg2$coeff)\n\nbetag2<- exp(parmglm2$\"(Intercept)\")  #growth range (a)\nkg2<- -parmglm2$trend                 #growth rate (b)\nfitgom2 <- gompertz(1:10, alphag2, betag2, kg2)\npredgom2<-forecast(fitgom2,h=seth)\n\n#Operator 3\nalphag3<-tssubs3[hi] +5                 #upper asymptote (M)\nY3g<-log(log(alphag3/tssubs3))          #Transform\nReglmg3<-tslm(Y3g~trend)                #Lineal Regression\nparmglm3<-as.list(Reglmg3$coeff)\n\nbetag3<- exp(parmglm3$\"(Intercept)\")  #growth range (a)\nkg3<- -parmglm3$trend                 #growth rate (b)\nfitgom3 <- gompertz(1:10, alphag3, betag3, kg3)\npredgom3<-forecast(fitgom3,h=seth)\n\n#The predictions using gompertz model are:\nset5a<-data.frame(predgom1)\nagom<-set5a$Point.Forecast   #Operator 1 predictions\nset5b<-data.frame(predgom2)\nbgom<-set5b$Point.Forecast   #Operator 2 predictions\nset5c<-data.frame(predgom3)\ncgom<-set5c$Point.Forecast   #Operator 3 predictions\n\ndata_predgom1<-data.frame(Gom1=fitgom1)\ndata_predgom2<-data.frame(Gom2=fitgom2)\ndata_predgom3<-data.frame(Gom3=fitgom3)\n\n#Forecasting for 5 years\nfore3a<-data.frame(Fore_Log1=alog[1:5],Fore_Gom1=agom[1:5])\nfore3b<-data.frame(Fore_Log2=blog[1:5],Fore_Gom2=bgom[1:5])\nfore3c<-data.frame(Fore_Log3=clog[1:5],Fore_Gom3=cgom[1:5])\n\n\n##11.Predicting with Fisher Pry\n#Model applied When substitution is driven by superior technology. \n#The new product or service presents some technological advantage over the old one.\n\n#Operator 1\nL1<-tssubs1[hi]+5                    #upper asymptote (L)\ntransf1<-log((L1-tssubs1)/tssubs1)   #transform\n\nfitpry1<-tslm(transf1~trend)        #model\nset5a<-fitpry1$fitted.values\npredpry1<-L1/(1+exp(set5a))         #Prediction\nforepry1<-forecast(predpry1,h=seth) #Forecast\n\n#Operator 2\nL2<-tssubs2[hi]+5                    #upper asymptote (L)\ntransf2<-log((L2-tssubs2)/tssubs2)   #transform\n\nfitpry2<-tslm(transf2~trend)        #model\nset5b<-fitpry2$fitted.values\npredpry2<-L2/(1+exp(set5b))         #Prediction\nforepry2<-forecast(predpry2,h=seth) #Forecast\n\n#Operator 3\nL3<-tssubs3[hi]+5                    #upper asymptote (L)\ntransf3<-log((L3-tssubs3)/tssubs3)   #transform\n\nfitpry3<-tslm(transf3~trend)        #model\nset5c<-fitpry3$fitted.values\npredpry3<-L3/(1+exp(set5c))         #Prediction\nforepry3<-forecast(predpry3,h=seth) #Forecast\n\n##12. Bass Model                                              \n#**m** Total number of potential buyers of the new product\n#**p** The coefficient of innovation\n#**q** The coefficient of imitation\n\n#Operator1\nsetbas1<-subset(dataVoD1,Subs>=0.101)\nsetbas2<-subset(dataVoD1,Subs<0.101)\ndemand1<-tssubs1[(tssubs1)>=0.101]\ntime<-1:length(demand1)\nTdelt <- time     #Accuracy, size predictions\n\nBass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) * exp(-(P + Q) * time))/(1 + (Q/P) \n            *exp(-(P + Q) * time))^2, start = list(M = 60630, P = 0.03, Q = 0.38))\nBcoef <- coef(Bass.nls) # get coefficient operator 1\nm <- Bcoef[1]\np <- Bcoef[2]\nq <- Bcoef[3]\nngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs\n\nfitbas1 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2   #Model\nsetbas3<-data.frame(Year=setbas1$Year,Subs=fitbas1)          #Prediction\nx<-nrow(setbas2)\ncero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))\npredbas1<-rbind(cero,setbas3)\nforebas1<-forecast(predbas1$Subs,h=seth)                     #Forecast\n\n#Operator2\nsetbas1<-subset(dataVoD2,Subs>=0.101)\nsetbas2<-subset(dataVoD2,Subs<0.101)\ndemand2<-tssubs2[(tssubs2)>=0.101]\ntime<-1:length(demand2)\nTdelt <- time     #Accuracy, size predictions\n\nBass.nls <- nls(demand2 ~ M * (((P + Q)^2/P) * exp(-(P + Q) * time))/(1 + (Q/P) \n                                                                      *exp(-(P + Q) * time))^2, start = list(M = 60630, P = 0.03, Q = 0.38))\nBcoef <- coef(Bass.nls) # get coefficient operator 1\nm <- Bcoef[1]\np <- Bcoef[2]\nq <- Bcoef[3]\nngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs\n\nfitbas2 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2   #Model\nsetbas3<-data.frame(Year=setbas1$Year,Subs=fitbas2)          #Prediction\nx<-nrow(setbas2)\ncero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))\npredbas2<-rbind(cero,setbas3)\nforebas2<-forecast(predbas2$Subs,h=seth)                     #Forecast\n\n#Operator3\nsetbas1<-subset(dataVoD3,Subs>=0.101)\nsetbas2<-subset(dataVoD3,Subs<0.101)\ndemand3<-tssubs3[(tssubs3)>=0.101]\ntime<-1:length(demand3)\nTdelt <- time     #Accuracy, size predictions\n\nBass.nls <- nls(demand3 ~ M * (((P + Q)^2/P) * exp(-(P + Q) * time))/(1 + (Q/P) \n                                                                      *exp(-(P + Q) * time))^2, start = list(M = 60630, P = 0.03, Q = 0.38))\nBcoef <- coef(Bass.nls) # get coefficient operator 1\nm <- Bcoef[1]\np <- Bcoef[2]\nq <- Bcoef[3]\nngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs\n\nfitbas3 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2   #Model\nsetbas3<-data.frame(Year=setbas1$Year,Subs=fitbas3)             #Prediction\nx<-nrow(setbas2)\ncero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))\npredbas3<-rbind(cero,setbas3)\nforebas3<-forecast(predbas3$Subs,h=seth)                     #Forecast\n\n\n#The predictions using Bass and Fisher Pry model are:\nset6a<-data.frame(forepry1)\napry<-set6a$Point.Forecast   #Operator 1 predictions\nset6b<-data.frame(forepry2)\nbpry<-set6b$Point.Forecast   #Operator 2 predictions\nset6c<-data.frame(forepry3)\ncpry<-set6c$Point.Forecast   #Operator 3 predictions\n\nset7a<-data.frame(forebas1)\nabas<-set7a$Point.Forecast   #Operator 1 predictions\nset7b<-data.frame(forebas2)\nbbas<-set7b$Point.Forecast   #Operator 2 predictions\nset7c<-data.frame(forebas3)\ncbas<-set7c$Point.Forecast   #Operator 3 predictions\n\ndata_pred1c<-data.frame(Pry1=predpry1,Bass1=predbas1$Subs)\ndata_pred2c<-data.frame(Pry2=predpry2,Bass2=predbas2$Subs)\ndata_pred3c<-data.frame(Pry3=predpry3,Bass3=predbas3$Subs)\n\n#Forecasting for 5 years\nfore4a<-data.frame(Fore_Pry1=apry[1:5],Fore_Bas1=abas[1:5])\nfore4b<-data.frame(Fore_Pry2=bpry[1:5],Fore_Bas2=bbas[1:5])\nfore4c<-data.frame(Fore_Pry3=cpry[1:5],Fore_Bas3=cbas[1:5])\n\n\n##13.Performance Models for VoD\n#Using the forecast package, the performance models are:\n#**(ME)**:Mean Error \n#**(RMSE)**:Root Mean Square Error\n#**(MAE)**: Mean Absolute Error\n#**(MPE)**: Mean Porcentual Error\n#**(MAPE)**: Mean Absolute Porcentual Error\n\n#Modelo LogÃ­stico\nacc_g1<-accuracy(predlog1) #Operator 1 \nacc_g2<-accuracy(predlog2) #Operator 2 \nacc_g3<-accuracy(predlog3) #Operator 3 \n\n#Modelo Gompertz\nacc_h1<-accuracy(predgom1) #Operator 1 \nacc_h2<-accuracy(predgom2) #Operator 2 \nacc_h3<-accuracy(predgom3) #Operator 3 \n\n#Modelo Fisher-Pry\nacc_i1<-accuracy(predpry1,tsset1) #Operator 1 \nacc_i2<-accuracy(predpry2,tsset2) #Operator 2\nacc_i3<-accuracy(predpry3,tsset3) #Operator 3\n\n#Modelo Bass\nacc_j1<-accuracy(predbas1$Subs,dataVoD1$Subs)   #Duda Operator 1\nacc_j2<-accuracy(predbas2$Subs,dataVoD2$Subs)   #Duda Operator 2\nacc_j3<-accuracy(predbas3$Subs,dataVoD3$Subs)   #Duda Operator 3\n\n#The performance sets are:\nModels<-c(\"Logistic\",\"Gompertz\",\"Fisher-Pry\",\"Bass\")\n\n#Opereator 1\naccg1<-acc_g1[1,1:5]  #Logistic\nacch1<-acc_h1[1,1:5]  #Gompertz\nacci1<-acc_i1[1,1:5]  #Fisher-Pry\naccj1<-acc_j1[1,1:5]  #Bass\nacc_all1b<-round(rbind(accg1,acch1,acci1,accj1),2)\nperformVoD1<-data.frame(Models,acc_all1b)\n\n#Operator 2\naccg2<-acc_g2[1,1:5]\nacch2<-acc_h2[1,1:5]\nacci2<-acc_i2[1,1:5]\naccj2<-acc_j2[1,1:5]\nacc_all2b<-round(rbind(accg2,acch2,acci2,accj2),2)\nperformVoD2<-data.frame(Models,acc_all2b)\n\n#Operator 3\naccg3<-acc_g3[1,1:5]\nacch3<-acc_h3[1,1:5]\nacci3<-acc_i3[1,1:5]\naccj3<-acc_j3[1,1:5]\nacc_all3b<-round(rbind(accg3,acch3,acci3,accj3),2)\nperformVoD3<-data.frame(Models,acc_all3b)\n\n\n##Predictions Reports\n#Internet Residential Predictions by service provider\npredVoD1<-data.frame(data_predlog1,data_predgom1,data_pred1c) #Operator 1 \npredVoD2<-data.frame(data_predlog2,data_predgom2,data_pred2c) #Operator 2 \npredVoD3<-data.frame(data_predlog3,data_predgom3,data_pred3c) #Operator 3 \n\n##Forecast Reports\n##Forecasting for 5 Years Video on Demand \nforeVoD1<-data.frame(fore3a,fore4a)  #Operator 1\nforeVoD2<-data.frame(fore3b,fore4b)  #Operator 2\nforeVoD3<-data.frame(fore3c,fore4c)  #Operator 3\n\n#----------------Demand Models for VoIP Subscribers------------------\n##Subset data\ndataVoIP1<-data.frame(Year=year,Subs=oper1$VoIP1)  #Operator 1\ntssubs1<-ts(oper1$VoIP1,start=start,end=end) #Time serie\ndataVoIP2<-data.frame(Year=year,Subs=oper2$VoIP2)  #Operator 2\ntssubs2<-ts(oper2$VoIP2,start=start,end=end) #Time serie\ndataVoIP3<-data.frame(Year=year,Subs=oper3$VoIP3)  #Operator 3\ntssubs3<-ts(oper3$VoIP3,start=start,end=end) #Time serie\n\n\n##4.Predicting with Logistic and Gompertz Model VoIP\n\n##Logistic Model\n#Operator 1\nalpha1<-tssubs1[hi] +0.5           #upper asymptote (M)\nY1<-log(alpha1/tssubs1-1)          #Transform\nReglm1<-tslm(Y1~trend)             #Lineal Regression\nparmlm1<-as.list(Reglm1$coeff)\n\nbeta1<- exp(parmlm1$\"(Intercept)\")  #growth range (a)\nk1<- -parmlm1$trend                 #growth rate (b)\nfitlog1 <- logistic(1:10, alpha1, beta1, k1)\npredlog1<-forecast(fitlog1,h=seth)\n\n#Operator 2\nalpha2<-tssubs2[hi] +0.5           #upper asymptote (M)\nY2<-log(alpha2/tssubs2-1)          #Transform\nReglm2<-tslm(Y2~trend)             #Lineal Regression\nparmlm2<-as.list(Reglm2$coeff)\n\nbeta2<- exp(parmlm2$\"(Intercept)\")  #growth range (a)\nk2<- -parmlm2$trend                 #growth rate (b)\nfitlog2 <- logistic(1:10, alpha2, beta2, k2)\npredlog2<-forecast(fitlog2,h=seth)\n\n#Operator 3\nalpha3<-tssubs3[hi] +0.5           #upper asymptote (M)\nY3<-log(alpha3/tssubs3-1)          #Transform\nReglm3<-tslm(Y3~trend)             #Lineal Regression\nparmlm3<-as.list(Reglm3$coeff)\n\nbeta3<- exp(parmlm3$\"(Intercept)\")  #growth range (a)\nk3<- -parmlm3$trend                 #growth rate (b)\nfitlog3 <- logistic(1:10, alpha3, beta3, k3)\npredlog3<-forecast(fitlog3,h=seth)\n\n#The predictions using logistic model are:\nset4a<-data.frame(predlog1)\nalog<-set4a$Point.Forecast   #Operator 1 predictions\nset4b<-data.frame(predlog2)\nblog<-set4b$Point.Forecast   #Operator 2 predictions\nset4c<-data.frame(predlog3)\nclog<-set4c$Point.Forecast   #Operator 3 predictions\n\ndata_predlog1<-data.frame(Log1=fitlog1)\ndata_predlog2<-data.frame(Log2=fitlog2)\ndata_predlog3<-data.frame(Log3=fitlog3)\n\n###Gompertz Model\n\n#Operator 1\nalphag1<-tssubs1[hi] +5                 #upper asymptote (M)\nY1g<-log(log(alphag1/tssubs1))          #Transform\nReglmg1<-tslm(Y1g~trend)                #Lineal Regression\nparmglm1<-as.list(Reglmg1$coeff)\n\nbetag1<- exp(parmglm1$\"(Intercept)\")  #growth range (a)\nkg1<- -parmglm1$trend                 #growth rate (b)\nfitgom1 <- gompertz(1:10, alphag1, betag1, kg1)\npredgom1<-forecast(fitgom1,h=seth)\n\n#Operator 2\nalphag2<-tssubs2[hi] +5                 #upper asymptote (M)\nY2g<-log(log(alphag2/tssubs2))          #Transform\nReglmg2<-tslm(Y2g~trend)                #Lineal Regression\nparmglm2<-as.list(Reglmg2$coeff)\n\nbetag2<- exp(parmglm2$\"(Intercept)\")  #growth range (a)\nkg2<- -parmglm2$trend                 #growth rate (b)\nfitgom2 <- gompertz(1:10, alphag2, betag2, kg2)\npredgom2<-forecast(fitgom2,h=seth)\n\n#Operator 3\nalphag3<-tssubs3[hi] +5                 #upper asymptote (M)\nY3g<-log(log(alphag3/tssubs3))          #Transform\nReglmg3<-tslm(Y3g~trend)                #Lineal Regression\nparmglm3<-as.list(Reglmg3$coeff)\n\nbetag3<- exp(parmglm3$\"(Intercept)\")  #growth range (a)\nkg3<- -parmglm3$trend                 #growth rate (b)\nfitgom3 <- gompertz(1:10, alphag3, betag3, kg3)\npredgom3<-forecast(fitgom3,h=seth)\n\n#The predictions using gompertz model are:\nset5a<-data.frame(predgom1)\nagom<-set5a$Point.Forecast   #Operator 1 predictions\nset5b<-data.frame(predgom2)\nbgom<-set5b$Point.Forecast   #Operator 2 predictions\nset5c<-data.frame(predgom3)\ncgom<-set5c$Point.Forecast   #Operator 3 predictions\n\ndata_predgom1<-data.frame(Gom1=fitgom1)\ndata_predgom2<-data.frame(Gom2=fitgom2)\ndata_predgom3<-data.frame(Gom3=fitgom3)\n\n#Forecasting for 5 years\nfore3a<-data.frame(Fore_Log1=alog[1:5],Fore_Gom1=agom[1:5])\nfore3b<-data.frame(Fore_Log2=blog[1:5],Fore_Gom2=bgom[1:5])\nfore3c<-data.frame(Fore_Log3=clog[1:5],Fore_Gom3=cgom[1:5])\n\n\n##11.Predicting with Fisher Pry\n#Model applied When substitution is driven by superior technology. \n#The new product or service presents some technological advantage over the old one.\n\n#Operator 1\nL1<-tssubs1[hi]+5                    #upper asymptote (L)\ntransf1<-log((L1-tssubs1)/tssubs1)   #transform\n\nfitpry1<-tslm(transf1~trend)        #model\nset5a<-fitpry1$fitted.values\npredpry1<-L1/(1+exp(set5a))         #Prediction\nforepry1<-forecast(predpry1,h=seth) #Forecast\n\n#Operator 2\nL2<-tssubs2[hi]+5                    #upper asymptote (L)\ntransf2<-log((L2-tssubs2)/tssubs2)   #transform\n\nfitpry2<-tslm(transf2~trend)        #model\nset5b<-fitpry2$fitted.values\npredpry2<-L2/(1+exp(set5b))         #Prediction\nforepry2<-forecast(predpry2,h=seth) #Forecast\n\n#Operator 3\nL3<-tssubs3[hi]+5                    #upper asymptote (L)\ntransf3<-log((L3-tssubs3)/tssubs3)   #transform\n\nfitpry3<-tslm(transf3~trend)        #model\nset5c<-fitpry3$fitted.values\npredpry3<-L3/(1+exp(set5c))         #Prediction\nforepry3<-forecast(predpry3,h=seth) #Forecast\n\n##12. Bass Model                                              \n#**m** Total number of potential buyers of the new product\n#**p** The coefficient of innovation\n#**q** The coefficient of imitation\n\n#Operator1\nsetbas1<-subset(dataVoIP1,Subs>=0.11)\nsetbas2<-subset(dataVoIP1,Subs<0.11)\ndemand1<-tssubs1[(tssubs1)>=0.11]\ntime<-1:length(demand1)\nTdelt <- time     #Accuracy, size predictions\n\nBass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) * exp(-(P + Q) * time))/(1 + (Q/P) \n                                                                      *exp(-(P + Q) * time))^2, start = list(M = 60630, P = 0.03, Q = 0.38))\nBcoef <- coef(Bass.nls) # get coefficient operator 1\nm <- Bcoef[1]\np <- Bcoef[2]\nq <- Bcoef[3]\nngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs\n\nfitbas1 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2   #Model\nsetbas3<-data.frame(Year=setbas1$Year,Subs=fitbas1)             #Prediction\nx<-nrow(setbas2)\ncero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))\npredbas1<-rbind(cero,setbas3)\nforebas1<-forecast(predbas1$Subs,h=seth)                     #Forecast\n\n#Operator2\nsetbas1<-subset(dataVoIP2,Subs>=0.11)\nsetbas2<-subset(dataVoIP2,Subs<0.11)\ndemand2<-tssubs2[(tssubs2)>=0.11]\ntime<-1:length(demand2)\nTdelt <- time     #Accuracy, size predictions\n\nBass.nls <- nls(demand2 ~ M * (((P + Q)^2/P) * exp(-(P + Q) * time))/(1 + (Q/P) \n                                                                      *exp(-(P + Q) * time))^2, start = list(M = 60630, P = 0.03, Q = 0.38))\nBcoef <- coef(Bass.nls) # get coefficient operator 1\nm <- Bcoef[1]\np <- Bcoef[2]\nq <- Bcoef[3]\nngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs\n\nfitbas2 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2   #Model\nsetbas3<-data.frame(Year=setbas1$Year,Subs=fitbas2)             #Prediction\nx<-nrow(setbas2)\ncero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))\npredbas2<-rbind(cero,setbas3)\nforebas2<-forecast(predbas2$Subs,h=seth)                     #Forecast\n\n#Operator3\nsetbas1<-subset(dataVoIP3,Subs>=0.11)\nsetbas2<-subset(dataVoIP3,Subs<0.11)\ndemand3<-tssubs3[(tssubs3)>=0.11]\ntime<-1:length(demand3)\nTdelt <- time     #Accuracy, size predictions\n\nBass.nls <- nls(demand3 ~ M * (((P + Q)^2/P) * exp(-(P + Q) * time))/(1 + (Q/P) \n                                                                      *exp(-(P + Q) * time))^2, start = list(M = 60630, P = 0.03, Q = 0.38))\nBcoef <- coef(Bass.nls) # get coefficient operator 1\nm <- Bcoef[1]\np <- Bcoef[2]\nq <- Bcoef[3]\nngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs\n\nfitbas3 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2   #Model\nsetbas3<-data.frame(Year=setbas1$Year,Subs=fitbas3)             #Prediction\nx<-nrow(setbas2)\ncero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))\npredbas3<-rbind(cero,setbas3)\nforebas3<-forecast(predbas3$Subs,h=seth)                     #Forecast\n\n\n#The predictions using Bass and Fisher Pry model are:\nset6a<-data.frame(forepry1)\napry<-set6a$Point.Forecast   #Operator 1 predictions\nset6b<-data.frame(forepry2)\nbpry<-set6b$Point.Forecast   #Operator 2 predictions\nset6c<-data.frame(forepry3)\ncpry<-set6c$Point.Forecast   #Operator 3 predictions\n\nset7a<-data.frame(forebas1)\nabas<-set7a$Point.Forecast   #Operator 1 predictions\nset7b<-data.frame(forebas2)\nbbas<-set7b$Point.Forecast   #Operator 2 predictions\nset7c<-data.frame(forebas3)\ncbas<-set7c$Point.Forecast   #Operator 3 predictions\n\ndata_pred1c<-data.frame(Pry1=predpry1,Bass1=predbas1$Subs)\ndata_pred2c<-data.frame(Pry2=predpry2,Bass2=predbas2$Subs)\ndata_pred3c<-data.frame(Pry3=predpry3,Bass3=predbas3$Subs)\n\n#Forecasting for 5 years\nfore4a<-data.frame(Fore_Pry1=apry[1:5],Fore_Bas1=abas[1:5])\nfore4b<-data.frame(Fore_Pry2=bpry[1:5],Fore_Bas2=bbas[1:5])\nfore4c<-data.frame(Fore_Pry3=cpry[1:5],Fore_Bas3=cbas[1:5])\n\n\n##13.Performance Models for VoIP\n#Using the forecast package, the performance models are:\n#**(ME)**:Mean Error \n#**(RMSE)**:Root Mean Square Error\n#**(MAE)**: Mean Absolute Error\n#**(MPE)**: Mean Porcentual Error\n#**(MAPE)**: Mean Absolute Porcentual Error\n\n#Modelo LogÃ­stico\nacc_g1<-accuracy(predlog1) #Operator 1 \nacc_g2<-accuracy(predlog2) #Operator 2 \nacc_g3<-accuracy(predlog3) #Operator 3 \n\n#Modelo Gompertz\nacc_h1<-accuracy(predgom1) #Operator 1 \nacc_h2<-accuracy(predgom2) #Operator 2 \nacc_h3<-accuracy(predgom3) #Operator 3 \n\n#Modelo Fisher-Pry\nacc_i1<-accuracy(predpry1,tsset1) #Operator 1 \nacc_i2<-accuracy(predpry2,tsset2) #Operator 2\nacc_i3<-accuracy(predpry3,tsset3) #Operator 3\n\n#Modelo Bass\nacc_j1<-accuracy(predbas1$Subs,dataVoD1$Subs)   #Duda Operator 1\nacc_j2<-accuracy(predbas2$Subs,dataVoD2$Subs)   #Duda Operator 2\nacc_j3<-accuracy(predbas3$Subs,dataVoD3$Subs)   #Duda Operator 3\n\n#The performance sets are:\nModels<-c(\"Logistic\",\"Gompertz\",\"Fisher-Pry\",\"Bass\")\n\n#Opereator 1\naccg1<-acc_g1[1,1:5]  #Logistic\nacch1<-acc_h1[1,1:5]  #Gompertz\nacci1<-acc_i1[1,1:5]  #Fisher-Pry\naccj1<-acc_j1[1,1:5]  #Bass\nacc_all1b<-round(rbind(accg1,acch1,acci1,accj1),2)\nperformVoIP1<-data.frame(Models,acc_all1b)\n\n#Operator 2\naccg2<-acc_g2[1,1:5]\nacch2<-acc_h2[1,1:5]\nacci2<-acc_i2[1,1:5]\naccj2<-acc_j2[1,1:5]\nacc_all2b<-round(rbind(accg2,acch2,acci2,accj2),2)\nperformVoIP2<-data.frame(Models,acc_all2b)\n\n#Operator 3\naccg3<-acc_g3[1,1:5]\nacch3<-acc_h3[1,1:5]\nacci3<-acc_i3[1,1:5]\naccj3<-acc_j3[1,1:5]\nacc_all3b<-round(rbind(accg3,acch3,acci3,accj3),2)\nperformVoIP3<-data.frame(Models,acc_all3b)\n\n\n##Predictions Reports\n#Internet Residential Predictions by service provider\npredVoIP1<-data.frame(data_predlog1,data_predgom1,data_pred1c) #Operator 1 \npredVoIP2<-data.frame(data_predlog2,data_predgom2,data_pred2c) #Operator 2 \npredVoIP3<-data.frame(data_predlog3,data_predgom3,data_pred3c) #Operator 3 \n\n##Forecast Reports\n##Forecasting for 5 Years Video on Demand \nforeVoIP1<-data.frame(fore3a,fore4a)  #Operator 1\nforeVoIP2<-data.frame(fore3b,fore4b)  #Operator 2\nforeVoIP3<-data.frame(fore3c,fore4c)  #Operator 3\n\n#----------------Predictions, Forecast and Performance Reports-----------------------------------------\n\n##Predictions Report\npredIRes<-round(data.frame(predIRes1,predIRes2,predIRes3),2)\npredIBus<-round(data.frame(predIBus1,predIBus2,predIBus3),2)\npredVoD<-round(data.frame(predVoD1,predVoD2,predVoD3),2)\npredVoIP<-round(data.frame(predVoIP1,predVoIP2,predVoIP3),2)\n\npredict<-data.frame(predIRes,predIBus,predVoD,predVoIP)\nwrite.csv2(predict,\"Predictions_Report.csv\")\n\n##Forecast Report\nforeIRes<-round(data.frame(foreIRes1,foreIRes2,foreIRes3),2)\nforeIBus<-round(data.frame(foreIBus1,foreIBus2,foreIBus3),2)\nforeVoD<-round(data.frame(foreVoD1,foreVoD2,foreVoD3),2)\nforeVoIP<-round(data.frame(foreVoIP1,foreVoIP2,foreVoIP3),2)\n\nforecast<-data.frame(foreIRes,foreIBus,foreVoD,foreVoIP)\nwrite.csv2(forecast,\"Forecasting_Report.csv\")\n\n##Performance Report\nperformIRes<-data.frame(performIRes1,performIRes2[2:6],performIRes3[2:6]) #Internet Residential\nperformIBus<-data.frame(performIBus1,performIBus2[2:6],performIBus3[2:6]) #Internet Bussines\nperformVoD<-data.frame(performVoD1,performVoD2[2:6],performVoD3[2:6])     #Video on Demand\nperformVoIP<-data.frame(performVoIP1,performVoIP2[2:6],performVoIP3[2:6]) #Voice over IP\n\nperform<-data.frame(performIRes,performIBus,performVoD,performVoIP)\nwrite.csv2(performall,\"Performance_Report.csv\")\n\n",
    "created" : 1418510481117.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "22|44|50|10|\n52|68|461|56|\n463|64|855|56|\n857|50|1171|48|\n1173|51|1478|49|\n",
    "hash" : "854133654",
    "id" : "8F9E3538",
    "lastKnownWriteTime" : 1428272991,
    "path" : "~/GitHub/Dimensionamiento-de-Redes/Actividad 1/GitHubActividad1/Forecast_models.R",
    "project_path" : "Forecast_models.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}