oper3<-data.frame(years,na.exclude(subs[10:13])) #Subs operador 3
year<-years$Year
start<-year[1]
hi<-dim(years)[1]
end<-year[hi]
year1<-year[round(hi*0.70)]
seth<-8   ##Set predictions quantity
f1<-end+1 #Q forecast
f2<-end+5 #Q forecast
time<-1:hi
dataVoD1<-data.frame(Year=year,Subs=oper1$VoD1)  #Operator 1
tssubs1<-ts(oper1$VoD1,start=start,end=end) #Time serie
dataVoD2<-data.frame(Year=year,Subs=oper2$VoD2)  #Operator 2
tssubs2<-ts(oper2$VoD2,start=start,end=end) #Time serie
dataVoD3<-data.frame(Year=year,Subs=oper3$VoD3)  #Operator 3
tssubs3<-ts(oper3$VoD3,start=start,end=end) #Time serie
setbas1<-subset(dataVoD1,Year>2012)
setbas2<-subset(dataVoD1,Year<2012)
demand1<-tssubs1
time<-1:length(demand1)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *
exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q) * time))^2,
start = list(M = 60630, P = 0.03, Q = 0.38))
setbas1
setbas2
demand1
demand1<-window(tssubs1,start=2012,end=2016)
demand1
demand1<-window(tssubs1,start=2013,end=2016)
demand1
time<-1:length(demand1)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *
exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q) * time))^2,
start = list(M = 60630, P = 0.03, Q = 0.38))
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs
fitbas1 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2
setbas3<-data.frame(Year=years,Subs=fitbas1)
x<-nrow(setbas2)
cero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))
predbas1<-rbind(cero,setbas3)
forebas1<-forecast(predbas1$Subs,h=seth)#Forecast
fitbas1 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2
setbas3<-data.frame(Year=years,Subs=fitbas1)
x<-nrow(setbas2)
cero<-data.frame(Year=years,Subs=c(1:x*0))
predbas1<-rbind(cero,setbas3)
fitbas1 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2
setbas3<-data.frame(Year=years,Subs=fitbas1)
fitbas1
setbas1
fitbas1 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2
setbas3<-data.frame(Year=setbas1$Year,Subs=fitbas1)
x<-nrow(setbas2)
cero<-data.frame(Year=setbas1$Year,Subs=c(1:x*0))
x
setbas2
fitbas1 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2
setbas3<-data.frame(Year=setbas1$Year,Subs=fitbas1)
x<-nrow(setbas2)
cero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))
predbas1<-rbind(cero,setbas3)
forebas1<-forecast(predbas1$Subs,h=seth)#Forecast
plot(predbas1,type="l",main="Ajuste de modelo con Bass-Model",col="blue")
lines(tssubs1,col="hotpink4")
setbas1<-subset(dataVoD1,Year>2012)
setbas2<-subset(dataVoD1,Year<2012)
demand1<-window(tssubs1,start=2013,end=2016)
time<-1:length(demand1)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *
exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q) * time))^2,
start = list(M = 60630, P = 0.03, Q = 0.38))
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs
#Model
fitbas1 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2
setbas3<-data.frame(Year=setbas1$Year,Subs=fitbas1)
x<-nrow(setbas2)
cero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))
predbas1<-rbind(cero,setbas3)
forebas1<-forecast(predbas1$Subs,h=seth)#Forecast
setbas1<-subset(dataVoD2,Subs>=0.101)
setbas2<-subset(dataVoD2,Subs<0.101)
demand2<-tssubs2[(tssubs2)>=0.101]
time<-1:length(demand2)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *
exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q) * time))^2,
start = list(M = 60630, P = 0.03, Q = 0.38))
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs
fitbas2 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2   #Model
setbas3<-data.frame(Year=years,Subs=fitbas2)          #Prediction
x<-nrow(setbas2)
cero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))
predbas2<-rbind(cero,setbas3)
forebas2<-forecast(predbas2$Subs,h=seth)                     #Forecast
setbas1
R<-subset(dataVoD3,Subs<0.101)
setbas2
demand3<-tssubs3[(tssubs3)>=0.101]
demand3
time<-1:length(demand3)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *
exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q) * time))^2,
start = list(M = 60630, P = 0.03, Q = 0.38))
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs
fitbas3 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2   #Model
setbas3<-data.frame(Year=years,Subs=fitbas3)             #Prediction
fitbas3
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs
fitbas3 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2   #Model
setbas3<-data.frame(Year=setbas1$Year,Subs=fitbas3)             #Prediction
x<-nrow(setbas2)
cero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))
predbas3<-rbind(cero,setbas3)
forebas3<-forecast(predbas3$Subs,h=seth)                     #Forecast
#Operator1
setbas1<-subset(dataVoD1,Year>2012)
setbas2<-subset(dataVoD1,Year<2012)
demand1<-window(tssubs1,start=2013,end=2016)
time<-1:length(demand1)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *
exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q) * time))^2,
start = list(M = 60630, P = 0.03, Q = 0.38))
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs
#Model
fitbas1 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2
setbas3<-data.frame(Year=setbas1$Year,Subs=fitbas1)
x<-nrow(setbas2)
cero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))
predbas1<-rbind(cero,setbas3)
forebas1<-forecast(predbas1$Subs,h=seth)#Forecast
setbas1<-subset(dataVoD2,Subs>=0.101)
setbas2<-subset(dataVoD2,Subs<0.101)
demand2<-tssubs2[(tssubs2)>=0.101]
time<-1:length(demand2)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *
exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q) * time))^2,
start = list(M = 60630, P = 0.03, Q = 0.38))
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs
fitbas2 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2   #Model
setbas3<-data.frame(Year=years,Subs=fitbas2)          #Prediction
x<-nrow(setbas2)
cero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))
predbas2<-rbind(cero,setbas3)
forebas2<-forecast(predbas2$Subs,h=seth)                     #Forecast
dataVoD1<-data.frame(Year=year,Subs=oper1$VoD1)  #Operator 1
tssubs1<-ts(oper1$VoD1,start=start,end=end) #Time serie
dataVoD2<-data.frame(Year=year,Subs=oper2$VoD2)  #Operator 2
tssubs2<-ts(oper2$VoD2,start=start,end=end) #Time serie
dataVoD3<-data.frame(Year=year,Subs=oper3$VoD3)  #Operator 3
tssubs3<-ts(oper3$VoD3,start=start,end=end) #Time serie
````{r, warning=FALSE}
library(caret)
library(forecast)
library(growthmodels)
````
````{r}
subs<-read.csv("C:/Users/NataliaA/Documents/DataR/Subscribers_CV.csv",header=TRUE,
sep=";",na.strings="NA",dec=",")
years<-na.exclude(subs[1])
oper1<-na.exclude(subs[1:5]) #Subs operador 1
oper2<-data.frame(years,na.exclude(subs[6:9])) #Subs operador 2
oper3<-data.frame(years,na.exclude(subs[10:13])) #Subs operador 3
````
````{r}
year<-years$Year
start<-year[1]
hi<-dim(years)[1]
end<-year[hi]
year1<-year[round(hi*0.70)]
seth<-8   ##Set predictions quantity
f1<-end+1 #Q forecast
f2<-end+5 #Q forecast
time<-1:hi
````
dataVoD1<-data.frame(Year=year,Subs=oper1$VoD1)  #Operator 1
tssubs1<-ts(oper1$VoD1,start=start,end=end) #Time serie
dataVoD2<-data.frame(Year=year,Subs=oper2$VoD2)  #Operator 2
tssubs2<-ts(oper2$VoD2,start=start,end=end) #Time serie
dataVoD3<-data.frame(Year=year,Subs=oper3$VoD3)  #Operator 3
tssubs3<-ts(oper3$VoD3,start=start,end=end) #Time serie
#Operator 1
L1<-tssubs1[hi]+5                    #upper asymptote (L)
transf1<-log((L1-tssubs1)/tssubs1)   #transform
fitpry1<-tslm(transf1~trend)        #model
set5a<-fitpry1$fitted.values
predpry1<-L1/(1+exp(set5a))         #Prediction
forepry1<-forecast(predpry1,h=seth) #Forecast
plot(predpry1, main="Ajuste de Modelo Fisher-Pry")
lines(tssubs1,col="darkorange4")
#Operator 2
L2<-tssubs2[hi]+5                    #upper asymptote (L)
transf2<-log((L2-tssubs2)/tssubs2)   #transform
fitpry2<-tslm(transf2~trend)        #model
set5b<-fitpry2$fitted.values
predpry2<-L2/(1+exp(set5b))         #Prediction
forepry2<-forecast(predpry2,h=seth) #Forecast
#Operator 3
L3<-tssubs3[hi]+5                    #upper asymptote (L)
transf3<-log((L3-tssubs3)/tssubs3)   #transform
fitpry3<-tslm(transf3~trend)        #model
set5c<-fitpry3$fitted.values
predpry3<-L3/(1+exp(set5c))         #Prediction
forepry3<-forecast(predpry3,h=seth) #Forecast
setbas1<-subset(dataVoD1,Year>2012)
setbas2<-subset(dataVoD1,Year<2012)
demand1<-window(tssubs1,start=2013,end=2016)
time<-1:length(demand1)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *
exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q) * time))^2,
start = list(M = 60630, P = 0.03, Q = 0.38))
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs
#Model
fitbas1 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2
setbas3<-data.frame(Year=setbas1$Year,Subs=fitbas1)
x<-nrow(setbas2)
cero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))
predbas1<-rbind(cero,setbas3)
forebas1<-forecast(predbas1$Subs,h=seth)#Forecast
#Operator2
setbas1<-subset(dataVoD2,Subs>=0.101)
setbas2<-subset(dataVoD2,Subs<0.101)
demand2<-tssubs2[(tssubs2)>=0.101]
time<-1:length(demand2)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *
exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q) * time))^2,
start = list(M = 60630, P = 0.03, Q = 0.38))
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs
fitbas2 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2   #Model
setbas3<-data.frame(Year=setbas1$Year,Subs=fitbas2)          #Prediction
x<-nrow(setbas2)
cero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))
predbas2<-rbind(cero,setbas3)
forebas2<-forecast(predbas2$Subs,h=seth)                     #Forecast
#Operator3
setbas1<-subset(dataVoD3,Subs>=0.101)
setbas2<-subset(dataVoD3,Subs<0.101)
demand3<-tssubs3[(tssubs3)>=0.101]
time<-1:length(demand3)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *
exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q) * time))^2,
start = list(M = 60630, P = 0.03, Q = 0.38))
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs
fitbas3 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2   #Model
setbas3<-data.frame(Year=setbas1$Year,Subs=fitbas3)             #Prediction
x<-nrow(setbas2)
cero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))
predbas3<-rbind(cero,setbas3)
forebas3<-forecast(predbas3$Subs,h=seth)                     #Forecast
set6a<-data.frame(forepry1)
apry<-set6a$Point.Forecast   #Operator 1 predictions
set6b<-data.frame(forepry2)
bpry<-set6b$Point.Forecast   #Operator 2 predictions
set6c<-data.frame(forepry3)
cpry<-set6c$Point.Forecast   #Operator 3 predictions
set7a<-data.frame(forebas1)
abas<-set7a$Point.Forecast   #Operator 1 predictions
set7b<-data.frame(forebas2)
bbas<-set7b$Point.Forecast   #Operator 2 predictions
set7c<-data.frame(forebas3)
cbas<-set7c$Point.Forecast   #Operator 3 predictions
data_pred1c<-data.frame(Pry1=predpry1,Bass1=predbas1$Subs)
data_pred2c<-data.frame(Pry2=predpry2,Bass2=predbas2$Subs)
data_pred3c<-data.frame(Pry3=predpry3,Bass3=predbas3$Subs)
predpry1
predbas1
setbas1<-subset(dataVoD1,Year>2012)
setbas2<-subset(dataVoD1,Year<2012)
setbas1
setbas2
setbas2<-subset(dataVoD1,Year<2013)
setbas2
setbas1<-subset(dataVoIP1,Subs>=0.11)
dataVoIP1<-data.frame(Year=year,Subs=oper1$VoIP1)  #Operator 1
tssubs1<-ts(oper1$VoIP1,start=start,end=end) #Time serie
dataVoIP2<-data.frame(Year=year,Subs=oper2$VoIP2)  #Operator 2
tssubs2<-ts(oper2$VoIP2,start=start,end=end) #Time serie
dataVoIP3<-data.frame(Year=year,Subs=oper3$VoIP3)  #Operator 3
tssubs3<-ts(oper3$VoIP3,start=start,end=end) #Time serie
setbas1<-subset(dataVoIP1,Subs>=0.11)
setbas2<-subset(dataVoIP1,Subs<0.11)
demand1<-tssubs1[(tssubs1)>=0.11]
time<-1:length(demand1)
Tdelt <- time     #Accuracy, size predictions
setbas1
setbas2
demand1
demand1<-tssubs1#[(tss
demand1
time
demand1<-tssubs1
time<-1:length(demand1)
Tdelt <- time     #Accuracy, size predictions
time
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *
exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q) * time))^2,
start = list(M = 60630, P = 0.03, Q = 0.38))
ngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs
fitbas1 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2
setbas3<-data.frame(Year=years,Subs=fitbas1)
setbas3
predbas1<-setbas3#rbind(cero,setbas3)
forebas1<-forecast(predbas1$Subs,h=seth)#Forecast
forebas1
setbas3
fitbas1
demand1
plot(fitbas1)
lines(demand1)
lines(demand1,type="l")
lines(setbas1)
lines(setbas2)
setbas1
setbas2
lines(setbas2$Subs
)
lines(setbas2$Subs)
fitbas1
setbas3
predbas1<-setbas3#rbind(cero,setbas3)
forebas1<-forecast(predbas1$Subs,h=seth)#Forecast
dataVoIP1<-data.frame(Year=year,Subs=oper1$VoIP1)  #Operator 1
tssubs1<-ts(oper1$VoIP1,start=start,end=end) #Time serie
dataVoIP2<-data.frame(Year=year,Subs=oper2$VoIP2)  #Operator 2
tssubs2<-ts(oper2$VoIP2,start=start,end=end) #Time serie
dataVoIP3<-data.frame(Year=year,Subs=oper3$VoIP3)  #Operator 3
tssubs3<-ts(oper3$VoIP3,start=start,end=end) #Time serie
setbas1<-subset(dataVoIP1,Subs>=0.11)
setbas2<-subset(dataVoIP1,Subs<0.11)
demand1<-tssubs1
time<-1:length(demand1)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *
exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q) * time))^2,
start = list(M = 60630, P = 0.03, Q = 0.38))
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs
#Model
fitbas1 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2
setbas3<-data.frame(Year=years,Subs=fitbas1)
predbas1<-setbas3#rbind(cero,setbas3)
forebas1<-forecast(predbas1$Subs,h=seth)#Forecast
#Operator2
setbas1<-subset(dataVoIP2,Subs>=0.11)
setbas2<-subset(dataVoIP2,Subs<0.11)
demand2<-tssubs2[(tssubs2)>=0.11]
time<-1:length(demand2)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *
exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q) * time))^2,
start = list(M = 60630, P = 0.03, Q = 0.38))
setbas1<-subset(dataVoIP2,Subs>=0.11)
setbas2<-subset(dataVoIP2,Subs<0.11)
demand2<-tssubs2[(tssubs2)>=0.11]
time<-1:length(demand2)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand2 ~ M * (((P + Q)^2/P) *
exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q) * time))^2,
start = list(M = 60630, P = 0.03, Q = 0.38))
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs
fitbas2 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2   #Model
setbas3<-data.frame(Year=setbas1$Year,Subs=fitbas2)             #Prediction
x<-nrow(setbas2)
cero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))
predbas2<-rbind(cero,setbas3)
forebas2<-forecast(predbas2$Subs,h=seth)
setbas1<-subset(dataVoIP3,Subs>=0.11)
setbas2<-subset(dataVoIP3,Subs<0.11)
demand3<-tssubs3[(tssubs3)>=0.11]
time<-1:length(demand3)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand3 ~ M * (((P + Q)^2/P) *
exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q) * time))^2,
start = list(M = 60630, P = 0.03, Q = 0.38))
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs
fitbas3 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2   #Model
setbas3<-data.frame(Year=setbas1$Year,Subs=fitbas3)             #Prediction
x<-nrow(setbas2)
cero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))
predbas3<-rbind(cero,setbas3)
forebas3<-forecast(predbas3$Subs,h=seth)                     #Forecast
fitpar1=lm(tssubs1 ~ time + I(time^2))  #Model
predpar1<-predict(fitpar1)             #Prediction
forepar1<-forecast(predpar1,h=seth-3)  #Forecast
#Operator 2
fitpar2=lm(tssubs2 ~ time + I(time^2))  #Model
predpar2<-predict(fitpar2)             #Prediction
forepar2<-forecast(predpar2,h=seth-3)  #Forecast
#Operator 3
fitpar3=lm(tssubs3 ~ time + I(time^2))  #Model
predpar3<-predict(fitpar3)             #Prediction
forepar3<-forecast(predpar3,h=seth-3)  #Forecast
dataVoD1<-data.frame(Year=year,Subs=oper1$VoD1)  #Operator 1
tssubs1<-ts(oper1$VoD1,start=start,end=end) #Time serie
dataVoD2<-data.frame(Year=year,Subs=oper2$VoD2)  #Operator 2
tssubs2<-ts(oper2$VoD2,start=start,end=end) #Time serie
dataVoD3<-data.frame(Year=year,Subs=oper3$VoD3)  #Operator 3
tssubs3<-ts(oper3$VoD3,start=start,end=end) #Time serie
fitpar1=lm(tssubs1 ~ time + I(time^2))  #Model
predpar1<-predict(fitpar1)             #Prediction
forepar1<-forecast(predpar1,h=seth-3)  #Forecast
#Operator 2
fitpar2=lm(tssubs2 ~ time + I(time^2))  #Model
predpar2<-predict(fitpar2)             #Prediction
forepar2<-forecast(predpar2,h=seth-3)  #Forecast
#Operator 3
fitpar3=lm(tssubs3 ~ time + I(time^2))  #Model
predpar3<-predict(fitpar3)             #Prediction
forepar3<-forecast(predpar3,h=seth-3)  #Forecast
subs<-read.csv("C:/Users/NataliaA/Documents/DataR/Subscribers_CV.csv",header=TRUE,
sep=";",na.strings="NA",dec=",")
years<-na.exclude(subs[1])
oper1<-na.exclude(subs[1:5]) #Subs operador 1
oper2<-data.frame(years,na.exclude(subs[6:9])) #Subs operador 2
oper3<-data.frame(years,na.exclude(subs[10:13])) #Subs operador 3
year<-years$Year
start<-year[1]
hi<-dim(years)[1]
end<-year[hi]
year1<-year[round(hi*0.70)]
seth<-8   ##Set predictions quantity
f1<-end+1 #Q forecast
f2<-end+5 #Q forecast
time<-1:hi
dataVoD1<-data.frame(Year=year,Subs=oper1$VoD1)  #Operator 1
tssubs1<-ts(oper1$VoD1,start=start,end=end) #Time serie
dataVoD2<-data.frame(Year=year,Subs=oper2$VoD2)  #Operator 2
tssubs2<-ts(oper2$VoD2,start=start,end=end) #Time serie
dataVoD3<-data.frame(Year=year,Subs=oper3$VoD3)  #Operator 3
tssubs3<-ts(oper3$VoD3,start=start,end=end) #Time serie
fitpar1=lm(tssubs1 ~ time + I(time^2))  #Model
predpar1<-predict(fitpar1)             #Prediction
forepar1<-forecast(predpar1,h=seth-3)  #Forecast
fitpar2=lm(tssubs2 ~ time + I(time^2))  #Model
predpar2<-predict(fitpar2)             #Prediction
forepar2<-forecast(predpar2,h=seth-3)  #Forecast
#Operator 3
fitpar3=lm(tssubs3 ~ time + I(time^2))  #Model
predpar3<-predict(fitpar3)             #Prediction
forepar3<-forecast(predpar3,h=seth-3)  #Forecast
data_predpar1<-data.frame(Par1=predpar1) #Parabolic predictions
set2a<-data.frame(forepar1)
para<-data.frame(Fore_Par1=set2a$Point.Forecast)
#Operator 2
data_predpar2<-data.frame(Par2=predpar2) #Parabolic predictions
set2b<-data.frame(forepar2)
parb<-data.frame(Fore_Par2=set2b$Point.Forecast)
#Operator 3
data_predpar3<-data.frame(Par3=predpar3) #Parabolic predictions
set2c<-data.frame(forepar3)
parc<-data.frame(Fore_Par3=set2c$Point.Forecast)
forepar3
parc
