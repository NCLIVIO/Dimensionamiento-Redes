setbas1<-subset(dataVoIP1,Subs>=0.11)
setbas2<-subset(dataVoIP1,Subs<0.11)
demand1<-tssubs1#[(tssubs1)>=0.11]
time<-1:length(demand1)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) * exp(-(P + Q) * time))/(1 + (Q/P)
*exp(-(P + Q) * time))^2, start = list(M = 60630, P = 0.03, Q = 0.38))
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs
fitbas1 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2   #Model
setbas3<-data.frame(Year=setbas2$Year,Subs=fitbas1)             #Prediction
setbas3
x<-nrow(setbas2)
cero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))
x
cero
predbas1<-rbind(cero,setbas3)
predbas1
x
setbas3
predbas1
fitbas1 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2   #Model
setbas3<-data.frame(Year=setbas2$Year,Subs=fitbas1)             #Prediction
#x<-nrow(setbas2)
#cero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))
#predbas1<-rbind(cero,setbas3)
predbas1<-setbas3
forebas1<-forecast(predbas1$Subs,h=seth)
predbas1
table(predict)
set6a<-data.frame(forepry1)
apry<-set6a$Point.Forecast   #Operator 1 predictions
set6b<-data.frame(forepry2)
bpry<-set6b$Point.Forecast   #Operator 2 predictions
set6c<-data.frame(forepry3)
cpry<-set6c$Point.Forecast   #Operator 3 predictions
set7a<-data.frame(forebas1)
abas<-set7a$Point.Forecast   #Operator 1 predictions
set7b<-data.frame(forebas2)
bbas<-set7b$Point.Forecast   #Operator 2 predictions
set7c<-data.frame(forebas3)
cbas<-set7c$Point.Forecast   #Operator 3 predictions
data_pred1c<-data.frame(Pry1=predpry1,Bass1=predbas1$Subs)
data_pred2c<-data.frame(Pry2=predpry2,Bass2=predbas2$Subs)
data_pred3c<-data.frame(Pry3=predpry3,Bass3=predbas3$Subs)
fore6a<-data.frame(Fore_Pry1=apry[1:5],Fore_Bas1=abas[1:5])
fore6b<-data.frame(Fore_Pry2=bpry[1:5],Fore_Bas2=bbas[1:5])
fore6c<-data.frame(Fore_Pry3=cpry[1:5],Fore_Bas3=cbas[1:5])
fore6a
#Modelo ParabÃ³lico
acc_e1<-accuracy(predpar1,tssubs1)  #Operator 1
acc_e2<-accuracy(predpar2,tssubs2)  #Operator 2
acc_e3<-accuracy(predpar3,tssubs3)  #Operator 3
#Modelo LogÃ­stico
acc_g1<-accuracy(predlog1) #Operator 1
acc_g2<-accuracy(predlog2) #Operator 2
acc_g3<-accuracy(predlog3) #Operator 3
#Modelo Gompertz
acc_h1<-accuracy(predgom1) #Operator 1
acc_h2<-accuracy(predgom2) #Operator 2
acc_h3<-accuracy(predgom3) #Operator 3
#Modelo Fisher-Pry
acc_i1<-accuracy(predpry1,tssubs1) #Operator 1
acc_i2<-accuracy(predpry2,tssubs2) #Operator 2
acc_i3<-accuracy(predpry3,tssubs3) #Operator 3
#Modelo Bass
acc_j1<-accuracy(predbas1$Subs,dataVoD1$Subs)   #Duda Operator 1
acc_j2<-accuracy(predbas2$Subs,dataVoD2$Subs)   #Duda Operator 2
acc_j3<-accuracy(predbas3$Subs,dataVoD3$Subs)   #
Models<-c("Parabolic","Logistic","Gompertz","Fisher-Pry","Bass")
#Opereator 1
acce1<-acc_e1[1,1:5]  #Parabolic
accg1<-acc_g1[1,1:5]  #Logistic
acch1<-acc_h1[1,1:5]  #Gompertz
acci1<-acc_i1[1,1:5]  #Fisher-Pry
accj1<-acc_j1[1,1:5]  #Bass
acc_all1b<-round(rbind(acce1,accg1,acch1,acci1,accj1),2)
performVoD1<-data.frame(Models,acc_all1b)
#Operator 2
acce2<-acc_e1[1,1:5]  #Parabolic
accg2<-acc_g2[1,1:5]
acch2<-acc_h2[1,1:5]
acci2<-acc_i2[1,1:5]
accj2<-acc_j2[1,1:5]
acc_all2b<-round(rbind(acce2,accg2,acch2,acci2,accj2),2)
performVoD2<-data.frame(Models,acc_all2b)
#Operator 3
acce3<-acc_e1[1,1:5]  #Parabolic
accg3<-acc_g3[1,1:5]
acch3<-acc_h3[1,1:5]
acci3<-acc_i3[1,1:5]
accj3<-acc_j3[1,1:5]
acc_all3b<-round(rbind(acce3,accg3,acch3,acci3,accj3),2)
performVoD3<-data.frame(Models,acc_all3b)
predVoD1<-data.frame(data_predlog1,data_predgom1,data_predpar1,data_pred1c) #Operator 1
predVoD2<-data.frame(data_predlog2,data_predgom2,data_predpar2,data_pred2c) #Operator 2
predVoD3<-data.frame(data_predlog3,data_predgom3,data_predpar3,data_pred3c) #Opera
predVoD1
foreVoD1<-data.frame(fore5a,fore6a)  #Operator 1
foreVoD2<-data.frame(fore5b,fore6b)  #Operator 2
foreVoD3<-data.frame(fore5c,fore6c)  #Oper
table(predVoD1)
#write.csv2(predict,"Predictions_Report.csv")
library("knitr", lib.loc="~/R/win-library/3.3")
kable(predict,format = "markdown")
head(predict
)
predictall<-data.frame(Res=predIRes,VoD=predVoD,VoIP=predVoIP,Bus=predIBus)
head(cars)
plot(cars)
kable(cars,format = "markdown",align = "c")
kable(head(iris), format = "latex")
kable(head(iris), format = "html")
kable(performIRes,format = "markdown")
tssubs1
#Operator1
tssubs1<-ts(oper1$Internet_Res1,start=start,end=end) #Time serie
tsset1<-tssubs1
tstrain1<-window(tsset1,start=start,end=year1)      #Training and Testing data
tstest1<-window(tsset1,start=year1,end=end)
#Operator2
tssubs2<-ts(oper2$Internet_Res2,start=start,end=end) #Time serie
tsset2<-tssubs2/1
tstrain2<-window(tsset2,start=start,end=year1)        #Training and Testing data
tstest2<-window(tsset2,start=year1,end=end)
#Operator3
tssubs3<-ts(oper3$Internet_Res3,start=start,end=end) #Time serie
tsset3<-tssubs3/1
tstrain3<-window(tsset3,start=start,end=year1)        #Training and Testing data
tstest3<-window(tsset3,start=year1,end=end)
plot(tssubs1,main="Internet Residencial Mbps")
lines(tstest1,col="red")
legend("topleft",legend = c("Train set","Test set"), col=c("black","red"), lty = 1:2)
#Operator 1
fitlm1<-tslm(tstrain1~trend)       #Model
predlm1<-forecast(fitlm1, h=seth)  #Prediction
#Operator 2
fitlm2<-tslm(tstrain2~trend)       #Model
predlm2<-forecast(fitlm2, h=seth)  #Prediction
#Operator 3
fitlm3<-tslm(tstrain3~trend)       #Model
predlm3<-forecast(fitlm3, h=seth)  #Prediction
#Operator 1
fitpar1=lm(tsset1 ~ time + I(time^2))  #Model
predpar1<-predict(fitpar1)             #Prediction
forepar1<-forecast(predpar1,h=seth-3)  #Forecast
#Operator 2
fitpar2=lm(tsset2 ~ time + I(time^2))  #Model
predpar2<-predict(fitpar2)             #Prediction
forepar2<-forecast(predpar2,h=seth-3)  #Forecast
#Operator 3
fitpar3=lm(tsset3 ~ time + I(time^2))  #Model
predpar3<-predict(fitpar3)             #Prediction
forepar3<-forecast(predpar3,h=seth-3)  #Forecast
#Operator 1
Yexp1=lm(log(tsset1) ~ time)          #Transform
parmexp1<-as.list(Yexp1$coeff)
betae1<- exp(parmexp1$"(Intercept)")  #growth range (a)
ke1<- parmexp1$time                   #growth rate (b)
fitexp1<-betae1*exp(ke1*time)         #Model
predexp1<-forecast(fitexp1,h=seth-3)
#Operator 2
Yexp2=lm(log(tsset2) ~ time)          #Transform
parmexp2<-as.list(Yexp2$coeff)
betae2<- exp(parmexp2$"(Intercept)")  #growth range (a)
ke2<- parmexp2$time                   #growth rate (b)
fitexp2<-betae2*exp(ke2*time)         #Model
predexp2<-forecast(fitexp2,h=seth-3)
#Operator 3
Yexp3=lm(log(tsset3) ~ time)          #Transform
parmexp3<-as.list(Yexp3$coeff)
betae3<- exp(parmexp3$"(Intercept)")  #growth range (a)
ke3<- parmexp3$time                   #growth rate (b)
fitexp3<-betae3*exp(ke3*time)         #Model
predexp3<-forecast(fitexp3,h=seth-3)
#Operator 1
set1a<-data.frame(predlm1)  #Linear predictions
lma<-data.frame(Fore_Lin1=set1a$Point.Forecast[4:8])
data_predlm1<-data.frame(Lin1=c(fitlm1$fitted.values,set1a$Point.Forecast[1:3]))
#Operator 2
set1b<-data.frame(predlm2)  #Linear predictions
lmb<-data.frame(Fore_Lin2=set1b$Point.Forecast[4:8])
data_predlm2<-data.frame(Lin2=c(fitlm2$fitted.values,set1b$Point.Forecast[1:3]))
#Operator 3
set1c<-data.frame(predlm3)  #Linear predictions
lmc<-data.frame(Fore_Lin3=set1c$Point.Forecast[4:8])
data_predlm3<-data.frame(Lin3=c(fitlm3$fitted.values,set1c$Point.Forecast[1:3]))
#Operator 1
data_predpar1<-data.frame(Par1=predpar1) #Parabolic predictions
set2a<-data.frame(forepar1)
para<-data.frame(Fore_Par1=set2a$Point.Forecast)
#Operator 2
data_predpar2<-data.frame(Par2=predpar2) #Parabolic predictions
set2b<-data.frame(forepar2)
parb<-data.frame(Fore_Par2=set2b$Point.Forecast)
#Operator 3
data_predpar3<-data.frame(Par3=predpar3) #Parabolic predictions
set2c<-data.frame(forepar3)
parc<-data.frame(Fore_Par3=set2c$Point.Forecast)
#Operator 1
set3a<-data.frame(predexp1)  #Exponential predictions
expa<-data.frame(Fore_Exp1=set3a$Point.Forecast)
data_predexp1<-data.frame(Exp1=fitexp1)
#Operator 2
set3b<-data.frame(predexp2)  #Exponential predictions
expb<-data.frame(Fore_Exp2=set3b$Point.Forecast)
data_predexp2<-data.frame(Exp2=fitexp2)
#Operator 1
set3c<-data.frame(predexp3)  #Exponential predictions
expc<-data.frame(Fore_Exp3=set3c$Point.Forecast)
data_predexp3<-data.frame(Exp3=fitexp3)
data_pred1a<-data.frame(data_predlm1,data_predpar1,data_predexp1)  #Operator 1
data_pred2a<-data.frame(data_predlm2,data_predpar2,data_predexp2)  #Operator 2
data_pred3a<-data.frame(data_predlm3,data_predpar3,data_predexp3)  #Operator 3
fore1a<-data.frame(Year=f1:f2,lma,para,expa)   #Operator 1
fore1b<-data.frame(lmb,parb,expb)              #Operator 2
fore1c<-data.frame(lmc,parc,expc)              #Operator 3
rep1<-data.frame(data_pred1a,fore1a)
rep1
data_predlm1
fore1a
dataVoD1<-data.frame(Year=year,Subs=oper1$VoD1)  #Operator 1
tssubs1<-ts(oper1$VoD1,start=start,end=end) #Time serie
dataVoD2<-data.frame(Year=year,Subs=oper2$VoD2)  #Operator 2
tssubs2<-ts(oper2$VoD2,start=start,end=end) #Time serie
dataVoD3<-data.frame(Year=year,Subs=oper3$VoD3)  #Operator 3
tssubs3<-ts(oper3$VoD3,start=start,end=end) #Time serie
alpha1<-tssubs1[hi] +0.5           #upper asymptote (M)
Y1<-log(alpha1/tssubs1-1)*1          #Transform
Reglm1<-tslm(Y1~trend)             #Lineal Regression
parmlm1<-as.list(Reglm1$coeff)
beta1<- exp(parmlm1$"(Intercept)")  #growth range (a)
k1<- -parmlm1$trend                 #growth rate (b)
fitlog1 <- logistic(1:10, alpha1, beta1, k1)
predlog1<-forecast(fitlog1,h=seth)
plot(Y1)
plot(rReglm1)
plot(Reglm1)
Reglm1
Reglm1$data
plot(Reglm1$data)
plot(Reglm1$model)
parmlm1
beta1<- exp(parmlm1$"(Intercept)")  #growth range (a)
k1<- -parmlm1$trend                 #growth rate (b)
fitlog1 <- logistic(1:10, alpha1, beta1, k1)
predlog1<-forecast(fitlog1,h=seth)
plot(fitlog1)
plot(predlog1)
lines(tssubs1,col="red")
predlog1
tssubs1
fitlog1
plot(tssubs1)
lines(fitlog1,col="blue")
fitlog1
tslog1<-ts(fitlog1,start=start,end=end)
plot(tssubs1)
lines(tslog1,col="blue")
predlog1<-forecast(fitlog1,h=seth)
predlog1
forecast(tslog1,h=seth)
predlog1<-forecast(tslog1,h=seth)
plot(predlog1)
lines(tslog1,col="red")
lines(tssubs1,col="green")
start
end
tstrain1
year1
dataVoD1<-data.frame(Year=year,Subs=oper1$VoD1)  #Operator 1
tssubs1<-ts(oper1$VoD1,start=start,end=end) #Time serie
tstrain1<-window(tssubs1,start=start,end=year1)      #Training and Testing data
tstest1<-window(tssubs1,start=year1,end=end)
alpha1
plot(tssubs1)
lines(fitlog1,col="green")
lines(tslog1,col="green")
plot(tssubs1, main="Modelo logÃ­stico")
lines(tslog1,col="blue")
plot(predlog1)
plot(predlog1,main="Forecast from Logistic")
lines(tssubs1,col="green")
lines(tssubs1,col="olive")
plot(predlog1,main="Forecast from Logistic")
lines(tssubs1,col="chartreuse4")
plot(predlog1,main="Forecast from Logistic")
lines(tssubs1,col="darkgreen")
plot(tssubs1, main="Modelo logÃ­stico")
lines(tslog1,col="dodgerblue4")
plot(tssubs1, main="Modelo logÃ­stico")
lines(tslog1,col="firebrick4")
data_predlog1<-data.frame(Log1=fitlog1)
kable(data_predlog1,format = "markdown")
L1<-tssubs1[hi]+5                    #upper asymptote (L)
transf1<-log((L1-tssubs1)/tssubs1)   #transform
fitpry1<-tslm(transf1~trend)        #model
set5a<-fitpry1$fitted.values
predpry1<-L1/(1+exp(set5a))         #Prediction
forepry1<-forecast(predpry1,h=seth) #
plot(predpry1)
plot(forepry1)
plot(fitpry1)
fitpry1
plot(set5a)
plot(predpry1)
plot(forepry1)
plot(predpry1)
lines(tssubs1,col="darkorange4")
plot(predpry1, main="Ajuste de Modelo Fisher-Pry")
lines(tssubs1,col="darkorange4")
setbas1<-subset(dataVoD1,Subs>=0.11)
setbas2<-subset(dataVoD1,Subs<0.11)
demand1<-tssubs1[(tssubs1)>=0.11]
time<-1:length(demand1)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *
exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q) * time))^2,
start = list(M = 60630, P = 0.03, Q = 0.38))
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p + q) * Tdelt)  #Setting t
fitbas1 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2   #Model
setbas3<-data.frame(Year=setbas1$Year,Subs=fitbas1)             #Prediction
x<-nrow(setbas2)
cero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))
predbas1<-rbind(cero,setbas3)
forebas1<-forecast(predbas1$Subs,h=seth)
plot(predbas1)
plot(forebas1)
plot(predbas1)
lines(tssubs1,col="hotpink4")
plot(predbas1,type="lines",main="Ajuste de modelo con Bass-Model")
lines(tssubs1,col="hotpink4")
plot(predbas1,type="line",main="Ajuste de modelo con Bass-Model")
lines(tssubs1,col="hotpink4")
plot(predbas1,type="l",main="Ajuste de modelo con Bass-Model")
lines(tssubs1,col="hotpink4")
data_pred1c<-data.frame(Pry1=predpry1,Bass1=predbas1$Subs)
kable(data_pred1c,format = "markdown",caption = "VoD")
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *
exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q) * time))^2,
start = list(M = 60630, P = 0.03, Q = 0.38))
= list(M = 60630, P = 0.03, Q = 0.38))
plot(predbas1,type="l",main="Ajuste de modelo con Bass-Model")
lines(tssubs1,col="hotpink4")
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *exp(-(P + Q)*time))/(1+(Q/P)*
exp(-(P + Q)*time))^2,start
= list(M = 60630, P = 0.03, Q = 0.38))
setbas1<-subset(dataVoD1,Subs>=0.11)
setbas2<-subset(dataVoD1,Subs<0.11)
demand1<-tssubs1[(tssubs1)>=0.11]
time<-1:length(demand1)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *exp(-(P + Q)*time))/(1+(Q/P)*
exp(-(P + Q)*time))^2,start
= list(M = 60630, P = 0.03, Q = 0.38))
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p + q) * Tdelt)  #Setting the starting values for M to the Subs
fitbas1 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2   #Model
setbas3<-data.frame(Year=setbas1$Year,Subs=fitbas1)             #Prediction
x<-nrow(setbas2)
cero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))
predbas1<-rbind(cero,setbas3)
forebas1<-forecast(predbas1$Subs,h=seth)                     #Forecast
plot(predbas1,type="l",main="Ajuste de modelo con Bass-Model")
lines(tssubs1,col="hotpink4")
setbas1<-subset(dataVoD1,Subs>=0.11)
setbas1
setbas2<-subset(dataVoD1,Subs<0.11)
setbas2
demand1
time<-1:length(demand1)
Tdelt <- time
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *exp(-(P + Q)*time))/(1+(Q/P)*
exp(-(P + Q)*time))^2,start
= list(M = 60630, P = 0.03, Q = 0.38))
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
subs<-read.csv("C:/Users/NataliaA/Documents/DataR/Subscribers_CV.csv",header=TRUE,
sep=";",na.strings="NA",dec=",")
years<-na.exclude(subs[1])
oper1<-na.exclude(subs[1:5]) #Subs operador 1
oper2<-data.frame(years,na.exclude(subs[6:9])) #Subs operador 2
oper3<-data.frame(years,na.exclude(subs[10:13])) #Subs operador 3
year<-years$Year
start<-year[1]
hi<-dim(years)[1]
end<-year[hi]
year1<-year[round(hi*0.70)]
seth<-8   ##Set predictions quantity
f1<-end+1 #Q forecast
f2<-end+5 #Q forecast
time<-1:hi
dataVoD1<-data.frame(Year=year,Subs=oper1$VoD1)  #Operator 1
tssubs1<-ts(oper1$VoD1,start=start,end=end) #Time serie
#tstrain1<-window(tssubs1,start=start,end=year1)      #Training and Testing data
#tstest1<-window(tssubs1,start=year1,end=end)
dataVoD2<-data.frame(Year=year,Subs=oper2$VoD2)  #Operator 2
tssubs2<-ts(oper2$VoD2,start=start,end=end) #Time serie
dataVoD3<-data.frame(Year=year,Subs=oper3$VoD3)  #Operator 3
tssubs3<-ts(oper3$VoD3,start=start,end=end) #Time serie
setbas1<-subset(dataVoD1,Subs>=0.11)
setbas2<-subset(dataVoD1,Subs<0.11)
demand1<-tssubs1[(tssubs1)>=0.11]
time<-1:length(demand1)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *exp(-(P + Q)*time))/(1+(Q/P)*
exp(-(P + Q)*time))^2,start
= list(M = 60630, P = 0.03, Q = 0.38))
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
subs<-read.csv("C:/Users/NataliaA/Documents/DataR/Subscribers_CV.csv",header=TRUE,
sep=";",na.strings="NA",dec=",")
years<-na.exclude(subs[1])
oper1<-na.exclude(subs[1:5]) #Subs operador 1
oper2<-data.frame(years,na.exclude(subs[6:9])) #Subs operador 2
oper3<-data.frame(years,na.exclude(subs[10:13])) #Subs operador 3
year<-years$Year
start<-year[1]
hi<-dim(years)[1]
end<-year[hi]
year1<-year[round(hi*0.70)]
seth<-8   ##Set predictions quantity
f1<-end+1 #Q forecast
f2<-end+5 #Q forecast
time<-1:hi
dataVoD1<-data.frame(Year=year,Subs=oper1$VoD1)  #Operator 1
tssubs1<-ts(oper1$VoD1,start=start,end=end) #Time serie
dataVoD2<-data.frame(Year=year,Subs=oper2$VoD2)  #Operator 2
tssubs2<-ts(oper2$VoD2,start=start,end=end) #Time serie
dataVoD3<-data.frame(Year=year,Subs=oper3$VoD3)  #Operator 3
tssubs3<-ts(oper3$VoD3,start=start,end=end) #Time serie
#Operator 1
L1<-tssubs1[hi]+5                    #upper asymptote (L)
transf1<-log((L1-tssubs1)/tssubs1)   #transform
fitpry1<-tslm(transf1~trend)        #model
set5a<-fitpry1$fitted.values
predpry1<-L1/(1+exp(set5a))         #Prediction
forepry1<-forecast(predpry1,h=seth) #Forecast
plot(predpry1, main="Ajuste de Modelo Fisher-Pry")
lines(tssubs1,col="darkorange4")
setbas1<-subset(dataVoD1,Subs>=0.11)
setbas2<-subset(dataVoD1,Subs<0.11)
demand1<-tssubs1[(tssubs1)>=0.11]
time<-1:length(demand1)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M * (((P + Q)^2/P) *exp(-(P + Q)*time))/(1+(Q/P)*
exp(-(P + Q)*time))^2,start
= list(M = 60630, P = 0.03, Q = 0.38))
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p + q) * Tdelt)  #
fitbas1 <- m * ((p + q)^2/p) * ngete/(1 + (q/p) * ngete)^2   #Model
setbas3<-data.frame(Year=setbas1$Year,Subs=fitbas1)             #Prediction
x<-nrow(setbas2)
cero<-data.frame(Year=setbas2$Year,Subs=c(1:x*0))
predbas1<-rbind(cero,setbas3)
forebas1<-forecast(predbas1$Subs,h=seth)                     #Forecast
plot(predbas1,type="l",main="Ajuste de modelo con Bass-Model")
lines(tssubs1,col="hotpink4")
Bass.nls <- nls(demand1 ~ M*(((P + Q)^2/P)*exp(-(P + Q)*time))/(1+(Q/P)*
exp(-(P + Q)*time))^2,start
= list(M = 60630, P = 0.03, Q = 0.38))
setbas1<-subset(dataVoD1,Subs>=0.11)
setbas2<-subset(dataVoD1,Subs<0.11)
demand1<-tssubs1#[(tssubs1)>=0.11]
time<-1:length(demand1)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M*(((P + Q)^2/P)*exp(-(P + Q)*time))/(1+(Q/P)*
exp(-(P + Q)*time))^2,
start = list(M = 60630, P = 0.03, Q = 0.38))
Bcoef <- coef(Bass.nls) # get coefficient operator 1
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
tssubs1
Bass.nls <- nls(demand1 ~ M*(((P + Q)^2/P)*exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q)*time))^2,
start = list(M = 60630, P = 0.03, Q = 0.38))
Bass.nls <- nls(demand1 ~ M*(((P + Q)^2/P)*exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q)*time))^2,start = list(M = 60630, P = 0.03, Q = 0.38))
Bass.nls <- nls(demand1 ~ M*(((P + Q)^2/P)*exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q)*time))^2,start = list(M = 60630, P = 0.03, Q = 0.38))
setbas1<-subset(dataVoD1,Subs>=0.11)
setbas2<-subset(dataVoD1,Subs<0.11)
demand1<-tssubs1[(tssubs1)>=0.11]
time<-1:length(demand1)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M*(((P + Q)^2/P)*exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q)*time))^2,start = list(M = 60630, P = 0.03, Q = 0.38))
start = list(M = 60630, P = 0.03, Q = 0.38)
Bass.nls <- nls(demand1 ~ M*(((P + Q)^2/P)*exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q)*time))^2,start = list(M = 60630, P = 0.03, Q = 0.38))
Bcoef
tssubs1
demand1
setbas1<-subset(dataVoD1,Subs>=0.11)
setbas2<-subset(dataVoD1,Subs<0.11)
demand1<-tssubs1#[(tssubs1)>=0.11]
time<-1:length(demand1)
Tdelt <- time     #Accuracy, size predictions
Bass.nls <- nls(demand1 ~ M*(((P + Q)^2/P)*exp(-(P + Q)*time))/(1+(Q/P)*exp(-(P + Q)*time))^2,start = list(M = 60630, P = 0.03, Q = 0.38))
