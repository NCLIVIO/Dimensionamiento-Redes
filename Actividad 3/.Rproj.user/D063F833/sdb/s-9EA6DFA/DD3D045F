{
    "contents" : "---\ntitle: \"Simulaciones y Resultados\"\nauthor: \"Natalia Clivio\"\ndate: '2015'\noutput: word_document\n---\n#Análisis de Trazas Reales\n\n##Tráfico de Internet Residencial\n\n```{r}\n\ndata<-read.csv(\"C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Datos/Bitrate+for+CM_week.csv\",\n                  header=TRUE,sep=\";\",na.strings=\"NA\",dec=\".\")\n\ndataset<-data.frame(data[1],data[2],data[3],data[4])\n\nd<-as.character(dataset$Date)\nt<-as.character(dataset$Time)\ntime<-data.frame(d,t)\ntime<-paste(time$d,time$t,sep=\" \")\nDate<-strptime(time,\"%m/%d/%Y %H:%M\")\n\nDS_data<-as.character(dataset$DS.bps)\nDS_Kbps<-as.numeric(DS_data)/1000\n\nDS<-data.frame(\"Date\"=Date,\"DS_Kbps\"=DS_Kbps)\n\nplot(DS,type=\"l\",col=\"blue\",xlab=\"time (h)\",ylab=\"Downstream (Kbps)\",\n     main=\"Tráfico de un usuario residencial 6 Mbps\")\nabline(v=NULL,h=2000,lty=3,col=\"gray\")\nabline(v=NULL,h=4000,lty=3,col=\"gray\")\nabline(v=NULL,h=6000,lty=3,col=\"gray\")\n````\n\nLos parámetros de la traza son:\n\n````{r}\ndatos<-DS$DS_Kbps\nsummary(datos)\n\nu<-mean(datos) #Kbps\nvar<-var(datos)\n````\n\nCalculando el parámetro HURTS\n\n````{r}\nlibrary(fArma)\nh<-as.ts(datos)\n\nRS<-rsFit(h, levels = 50, minnpts = 3, cut.off = 10^c(0.7, 2.5),\n      doplot = TRUE, trace = FALSE, title = NULL, description = NULL)\n\nH<-data.frame(RS@hurst)$H[1]\nRS\n````\n\n\nModelando los datos como tráfico fraccional browniano\n\n````{r}\n\nC<-6000 #Determinado por el servicio contratado\n\n#Se calcula Bmin, para un tmax y un smin\nt<-log10(seq(length=100, from=1, to=200))    #time parameter (ms)\ns<-log10(seq(length=100, from=1, to=5)) #space parameter (bytes^-1)\n\ntmax<-max(t)\nsmin<-min(s)\n\nB<-(C-u)*((t*(1-H))/H) #ms\n\n````\n\n````{r echo=FALSE}\ndatacol<-c(\"Mean\", \"Desv\",\"HURTS\",\"C\",\"B\")\nsetcol<-round(c(u,var,H,C,B),2)\nset1<-data.frame(Parámetro=datacol,Valor=setcol)\nset1\n````\n\nCalculando el ancho de banda efectivo, se obtiene:\n\n````{r}\n#Cálculo estadístico del ancho de banda efectivo de la traza\n\nBw<-function(t,s) {u+(((s*var)/2)*(t^(2*H-1)))}   \nz<-outer(t,s,Bw) # La función outer evalua la función Bw en cada punto (si,tj)\n\npersp((t),(s),(z),theta=20,phi=-0,col =\"green\", sub=\"Ancho de Banda Efectivo de un proceso con movimiento fractal browniano\"\n      ,ticktype =\"detailed\",xlab=\"t (ms)\",ylab=\"s\",zlab=\"(s,t)\")  \n````\n\n\nVerificando el intervalo de confianza para el cálculo del ancho de banda:\n\n````{r}\nn<-nrow(DS)\nt<-(B/(C-u))*(H/(1-H))      \ns<-(B+(C-u)*t)/(var*t^(2*H)) \nt\ns\n\nBw_MFB<-u+(((s*var)/2)*(t^(2*H-1)))\nBw_MFB\n\n#El intervalo de confianza esta dado por:\ndataBw<-u+(((smin*var)/2)*(tmax^(2*H-1)))\nsd<-sqrt((1/(n-1)*(sum((dataBw-Bw_MFB)^2))))\n\nnormalci<-Bw_MFB+c(-1,1)*qnorm(0.95)*sd/sqrt(n)\nnormalci\n````\n\n\n\n##Traza de Video MPEG-4\nA continuación se modela una traza de video comprimido en MPEG 4. Esta traza tiene: 89998 frames, tiene una duración de 3600 seg.\n\n```{r echo=FALSE}\n#Dataset\n\nmpeg<-read.csv(\"C:/Users/NataliaA/Documents/Maestria/Tráfico L3/MPEG/Verbose_StarWarsIV.dat\",header=FALSE,sep=\"\",na.strings=\"NA\",dec=\".\",skip=2)\n\nsetmpeg<-data.frame(No=mpeg$V1,Type=mpeg$V2,\"time_ms\"=mpeg$V3,byte=mpeg$V4)\nNo<-mpeg$V1\ntype<-mpeg$V2\nTime<-mpeg$V3 #ms\nbyte<-mpeg$V4 #length Bytes\n\ndata<-head(byte,125) #muestra de 250 frames\ntime<-(seq(length=125, from=1, to=5))    #time parameter (s)\n\nplot(time,data, type=\"h\",ylab=\"bits/frame\",xlab=\"time (secs)\",main=\"Estructura GOP de película Star Wars MPEG-4\")\n\nplot(No,byte, type=\"l\",ylab=\"Tamaño Frame [bits]\",xlab=\"Frame index\",main=\"Tamaño de la Traza Star Wars MPEG-4\")\n\n````\n\nLos parámetros de la traza completa es:\n\n````{r}\nsummary(setmpeg)\nl<-round(mean(byte*8)/1000,3) #Kbits per second\nl\n````\n\n\n````{r}\n#Parameters\nIset<-subset(setmpeg,Type==\"I\")\ndset<-diff(Iset$time_ms)\n\nd<-mean(dset)/1000 #seg. Tiempo entre frames tipo I \nb<-(7913*8)/1000              #Kbits\nl<-round(mean(Iset$byte*8)/1000,3) #Kbits per second\nvar<-round(var(Iset$byte*8)/1000,3)\n\ndatacol<-c(\"d\", \"b\",\"l\",\"var\")\nunitcol<-c(\"seg\",\"Kbits\",\"Kbps\",\"\")\nsetcol<-round(c(d,b,l,var),2)\ndata.frame(Parámetro=datacol,Valor=setcol,Unit=unitcol)\n````\n\n\nCalculando el ancho de banda efectivo\n````{r}\ntime<-(seq(length=100, from=1, to=100))    #time parameter (s)\nspace<-(seq(length=100, from=1, to=5)) #space parameter (bytes^-1)\n\nt<-log10(time)\ns<-log10(space)\n````\n\nLos ejes tienen escala doble logarítmica con s en unidades de $bytes^-1$, t en segundos y $\\alpha(s,t)$ en bytes por segundo.\n\n````{r}\nBwmpeg<-function(t,s) {l+((b/t)*floor(t/d))+((1/(s*t))*log10(1+((t/d)-floor(t/d))*(exp(b*s)-1)))}   \n\nz<-outer(t,s,Bwmpeg) # La función outer evalua la función Bw en cada punto(si,tj)\n\npersp(t,s,z,theta=20,phi=-0,col =\"violet\", \n      sub=\"Ancho de Banda Efectivo de una traza de video MPEG-4\"\n      ,ticktype =\"detailed\",xlab=\"t (s)\",ylab=\"s\",zlab=\"BW(s,t) [Kbps]\")  \n````\n\n\nCalculando el punto crítico **(s,t)**\n\n````{r}\na<-subset(Iset,byte>4000)\nl<-2209   #Q Transiciones del estado 0 a h (ON)\nu<-7499  #Q Transiciones que salen del estado 0 (OFF)\nh<-(7913*8)/1000  #Pico de la Traza (Kbps) 7913\n\n````\n\n````{r}\npi1<-l/(l+u)\npi2<-u/(l+u)\n\nspace<-seq(length=100, from=1, to=100) \ntime<-seq(length=100, from=1, to=30) \ns<-log10(space)\nt<-log10(time)\n\nBw<-function(t,s) {(1/s)*log10(pi2+(exp((h*s))*pi1))}   \nz<-outer(t,s,Bw) # La función outer evalua la función Bw en cada punto (si,tj)\n\npersp(t,s,z,theta=20,phi=-0,col =\"orange\"\n      ,ticktype =\"detailed\",xlab=\"t (ms)\",ylab=\"s\",zlab=\"(s,t)\")  \n\n````\n\n\n\n##Tráfico VoIP residencial\n\n````{r}\nvoip<-read.csv(\"C:/Users/NataliaA/Documents/Maestria/Tráfico L3/VoIP/Kbpsperuser_Voip_1015.csv\",\n                  header=TRUE,sep=\";\",na.strings=\"NA\",dec=\",\")\n\nvoipset<-data.frame(voip[1],voip[2],voip[3])\n\nd<-as.character(voipset$Date)\nt<-as.character(voipset$Time)\ntime<-data.frame(d,t)\ntime<-paste(time$d,time$t,sep=\" \")\nDate<-strptime(time,\"%d/%m/%Y %H:%M\")\ndatos<-voipset$Kbps.cliente\n\nKbps<-data.frame(\"Date\"=Date,\"Call_Kbps\"=datos)\n\nplot(Kbps,type=\"l\",col=\"springgreen3\",xlab=\"time (min)\",ylab=\"Kbps\",\n     main=\"Tráfico VoIP de un usuario residencial\")\n\n````\n\nLos parámetros de la traza son:\n\n````{r}\nsummary(datos)\n````\n\n### Modelo ON/OFF\nCalculando el ancho de banda $\\alpha(s,t)$:\n\n````{r}\nl<-0.4  #P Transiciones del estado 0 a h (ON)\nu<-0.6  #P Transiciones del estado h a 0 (OFF)\nh<-2.4  #Capacidad enlace (Kbps) \n````\n\n````{r warning=FALSE}\n\n#Distribución invariante es un vector de probabilidad pi tal que piQ=0, \n#entonces:\n\npi1<-l/(l+u)\npi2<-u/(l+u)\n\ntime<-(seq(length=100, from=1, to=200))    #time parameter (ms)\nspace<-(seq(length=100, from=0.1, to=4000)) #space parameter (bytes^-1)\n\nt<-log10(time)\ns<-log10(space)\n\nBw<-function(t,s) {(1/s)*log10(pi2+(exp((h*s))*pi1))}   \nz<-outer(t,s,Bw) \npersp(t,s,z,theta=-30,phi=0,col = \"green\",\n      sub=\"Ancho de banda efectivo de una fuente ON/OFF\",\n      ticktype = \"detailed\",xlab=\"time (ms)\",ylab=\"space (s)\",zlab=\"(s,t)\")  \n````\n\n\n### Modelo Fraccional Browniano\n\nCalculando el parámetro HURTS de la traza\n\n````{r}\nlibrary(fArma)\nh<-as.ts(datos)\n\nRS<-rsFit(h, levels = 50, minnpts = 3, cut.off = 10^c(0.7, 2.5),\n      doplot = TRUE, trace = FALSE, title = NULL, description = NULL)\nH<-data.frame(RS@hurst)$H[1]\n````\n\n\nModelando los datos como tráfico fraccional browniano\n\n````{r}\nC<-2.4 #Determinado capacidad del canal (Kbps)\nu<-0.4 #Kbps\nvar<-var(datos)\n````\n\n\n````{r}\n\n#Se calcula Buffer min, para un tmax y un smin\nt<-log10(seq(length=100, from=1, to=200))    #time parameter (ms)\ns<-log10(seq(length=100, from=1, to=5)) #space parameter (bytes^-1)\n\ntmax<-max(t)\nsmin<-min(s)\n\nB<-(C-u)*((tmax*(1-H))/H) #ms\n\n````\n\n````{r echo=FALSE}\ndatacol<-c(\"Mean\", \"Desv\",\"HURTS\",\"C\",\"B\")\nunitcol<-c(\"Kbps\",\"\",\"\",\"Kpbs\",\"seg\")\nsetcol<-round(c(u,var,H,C,B),2)\nset1<-data.frame(Parámetro=datacol,Valor=setcol,Unit=unitcol)\nset1\n````\n\n\nCon estos parámetros se calcula en punto crítico:\n````{r}\nt<-(B/(C-u))*(H/(1-H))      \ns<-(B+(C-u)*t)/(var*t^(2*H))\nt\ns\n\nBw_MFB<-u+(((s*var)/2)*(t^(2*H-1)))\nBw_MFB\n````\n\n\nCalculando el ancho de banda efectivo, se obtiene:\n\n````{r}\n\nt<-log10(seq(length=100, from=1, to=200))    #time parameter (ms)\ns<-log10(seq(length=100, from=1, to=5)) #space parameter (bytes^-1)\n\nBw<-function(t,s) {u+(((s*var)/2)*(t^(2*H-1)))}   \nz<-outer(t,s,Bw) # La función outer evalua la función Bw en cada punto (si,tj)\n\npersp((t),(s),(z),theta=20,phi=-0,col =\"tomato\", sub=\"Ancho de Banda Efectivo de un proceso con movimiento fractal browniano\"\n      ,ticktype =\"detailed\",xlab=\"t (ms)\",ylab=\"s\",zlab=\"(s,t)\")  \n````\n\n",
    "created" : 1439144992278.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "971678002",
    "id" : "DD3D045F",
    "lastKnownWriteTime" : 1477536039,
    "path" : "~/GitHub/Dimensionamiento-Redes/Actividad 3/Resultados.Rmd",
    "project_path" : "Resultados.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_markdown"
}