plot(bmdata, xlab="time (s)",ylab="Packets",main="Brownian motion trace")
C<-52
B<-5
l<-50.83
var<-30.18
u<-l
s<-(2*(C-u))/var
t<-B/(C-u)
s
x <- seq(2,5,by=.15)
y<- seq(10,50,by=.15)
x
y
x<-(seq(length=100, from=2, to=8))    #
y<-(seq(length=100, from=10, to=50)) #
u1<-x
var1<-y
f <- function(u1,var1) u1+((s*var1)/2)
z <- outer(x,y,f)
persp(x,y,z,phi=45,theta=-45,col="yellow",shade=.00000001,ticktype="detailed")
persp(x,y,z,phi=0,theta=40,col="yellow",shade=.00000001,ticktype="detailed")
persp(x,y,z,phi=0,theta=60,col="yellow",shade=.00000001,ticktype="detailed")
persp(x,y,z,phi=0,theta=30,col="yellow",shade=.00000001,ticktype="detailed")
persp(x,y,z,phi=0,theta=10,col="yellow",shade=.00000001,ticktype="detailed")
persp(x,y,z,phi=10,theta=80,col="yellow",shade=.00000001,ticktype="detailed")
persp(x,y,z,phi=0,theta=60,col="yellow",shade=.00000001,ticktype="detailed")
persp(x,y,z,phi=0,theta=0,col="yellow",shade=.00000001,ticktype="detailed")
persp(x,y,z,phi=0,theta=20,col="yellow",shade=.00000001,ticktype="detailed")
persp(x,y,z,phi=0,theta=30,col="yellow",shade=.00000001,ticktype="detailed")
persp(x,y,z,phi=0,theta=30,col="yellow",shade=.00000001,ticktype="detailed",xlab="Taza promedio arribo",ylab="varianza taza arribo",zlab="$/pi$")
persp(x,y,z,phi=0,theta=30,col="yellow",shade=.00000001,ticktype="detailed",xlab="Taza promedio arribo",ylab="varianza taza arribo",zlab="Pi")
x<-(seq(length=100, from=30, to=60))    #
y<-(seq(length=100, from=20, to=50)) #
u1<-x
var1<-y
f <- function(u1,var1) u1+((s*var1)/2)
z <- outer(x,y,f)
persp(x,y,z,phi=0,theta=30,col="yellow",shade=.00000001,ticktype="detailed",xlab="Taza promedio arribo",ylab="varianza taza arribo",zlab="Pi")
optim(c(50,30), f)$par
x<-(seq(length=100, from=30, to=60))    #
y<-(seq(length=100, from=20, to=50)) #
u1<-x
var1<-y
f <- function(u1,var1) u1+((s*var1)/2)
z <- outer(x,y,f)
persp(x,y,z,phi=0,theta=30,col="yellow",shade=.00000001,ticktype="detailed",xlab="Taza promedio arribo",ylab="varianza taza arribo",zlab="Pi")
optim(c(50,30), f)$par
C<-52
B<-5
u<-50.83
var<-30.18
s<-(2*(C-u))/var
t<-B/(C-u)
Bw_MB<-u+((s*var)/2)
Bw_MB
t
s
fbmdata <- bm(hurst=0.75, n=1000)
plot(fbmdata, xlab="time (s)",ylab="Packets",main="Fractional Brownian motion trace")
fbmdata <- fbm(hurst=0.75, n=1000)
plot(fbmdata, xlab="time (s)",ylab="Packets",main="Fractional Brownian motion trace")
C<-37
B<-5
u<-35.09
var<-25.53
H<-0.75
s<-(B+(C+u)*t)/(var*t^(2*H)) #0.0355
t<-(B/(C-u))*(H/(1-H))      #8
s
t
Bw_MFB<-u+(((s*var)/2)*(t^(2*H-1)))
BW_MFB
Bw_MFB
u<-138.185 #bytes por segundo
var<-89.668^2 # varianza
H<-0.81
fbmdata <- fbm(hurst=0.81, n=1000)
plot(fbmdata, xlab="time (s)",ylab="Packets",main="Fractional brownian motion trace")
summary(fbmdata)
fbmdata <- fbm(hurst=0.75, n=1000)
plot(fbmdata, xlab="time (s)",ylab="Packets",main="Fractional brownian motion trace")
u<-138.185 #bytes por segundo
var<-89.668^2 # varianza
H<-0.81
t<-(seq(length=100, from=0.0001, to=10))    #time parameter (ms)
s<-(seq(length=100, from=0.00001, to=0.01)) #space parameter (bytes^-1)
Bw<-function(s,t) {log10(l+((((o^2)*(t^((2*H)-1)))/2)*s))}
z<-outer(t,s,Bw) # La función outer evalua la función Bw en cada punto(si,tj)
persp((t),(s),(z),theta=20,phi=-0,col = "lightblue", main="Ancho de Banda Efectivo",
ticktype ="detailed",xlab="t (ms)",ylab="s",zlab="(s,t)")
l<-138.185 #bytes por segundo
var<-89.668^2 # varianza
H<-0.81
t<-(seq(length=100, from=0.0001, to=10))    #time parameter (ms)
s<-(seq(length=100, from=0.00001, to=0.01)) #space parameter (bytes^-1)
````
Los ejes tienen escala logarítmica (base 10) con s en unidades de $bytes^-1$, t en segundos y $\alpha(s,t)$ en bytes por segundo.
````{r}
Bw<-function(s,t) {log10(l+((((o^2)*(t^((2*H)-1)))/2)*s))}
z<-outer(t,s,Bw) # La función outer evalua la función Bw en cada punto(si,tj)
persp((t),(s),(z),theta=20,phi=-0,col = "lightblue", main="Ancho de Banda Efectivo",
ticktype ="detailed",xlab="t (ms)",ylab="s",zlab="(s,t)")
l<-138.185 #bytes por segundo
var<-89.668^2 # varianza
H<-0.81
t<-(seq(length=100, from=0.0001, to=10))    #time parameter (ms)
s<-(seq(length=100, from=0.00001, to=0.01)) #space parameter (bytes^-1)
Bw<-function(s,t) {log10(l+((((o^2)*(t^((2*H)-1)))/2)*s))}
z<-outer(t,s,Bw) # La función outer evalua la función Bw en cada punto(si,tj)
persp((t),(s),(z),theta=20,phi=-0,col = "lightblue", main="Ancho de Banda Efectivo",
ticktype ="detailed",xlab="t (ms)",ylab="s",zlab="(s,t)")
C<-2
B<-15
l<-0.3
u<-0.4
h<-3.0
pi1<-l/(l+u)
pi2<-u/(l+u)
C<-2
B<-15
l<-0.3
u<-0.4
h<-3.0
pi1<-l/(l+u)
pi2<-u/(l+u)
s<-0.7
Bw_F<-(1/s)*log10(((exp(s*h))*pi1)+pi2)
Bw_F
pi1<-l/(l+u)
pi2<-u/(l+u)
pi<-matrix(c(pi1,0,pi2,0),2,2)
Q<-matrix(c(-l,u,l,-u),2,2)
H<-matrix(c(0,0,0,h),2,2)
V<-matrix(1,2,2)
Bw_OnOff<-(1/(s*t))*log10(pi*exp((Q+H)*1)*V)
p<-log10(pi*exp((Q+H)*1)*V)
no es invertible.
l<-0.01
u<-0.01
h<-0.01
pi1<-l/(l+u)
pi2<-u/(l+u)
pi2
ln<-0.01012
un<-0.01034
Qn<-matrix(c(-ln,un,ln,-un),2,2)
Qn
l<-0.01
u<-0.01
h<-0.01
pi1<-l/(l+u)
pi2<-u/(l+u)
Bw_onoff<-(1/s)*log10(((exp(s*h))*pi1)+pi2)
Bw_onoff
l<-0.3
u<-0.4
h<-3
pi1<-l/(l+u)
pi2<-u/(l+u)
s<-0.7
t<-28
Bw_onoff<-(1/s)*log10(((exp(s*h))*pi1)+pi2)
Bw_onoff
C<-2
B<-15
bw<-s*(B+(C*t))-(t*log10(((exp(s*h))*pi1)+pi2))
bw
bw<-s*(B+(C*t))-(t*(log10(((exp(s*h))*pi1)+pi2))
bw
bw<-s*(B+(C*t))-(t*(log10(((exp(s*h))*pi1)+pi2))
)
bw
pi<-matrix(c(pi1,0,pi2,0),2,2)
pi
l<-0.01
u<-0.01
h<-0.01
pi1<-l/(l+u)
pi2<-u/(l+u)
pi1
pi2
ln<-0.01012
un<-0.01034
Qn<-matrix(c(-ln,un,ln,-un),2,2)
Qn
l<-0.01
u<-0.01
h<-0.01
Q<-matrix(c(-l,u,l,-u),2,2)
H<-matrix(c(0,0,0,h),2,2)
V<-matrix(1,2,2)
Q
H
V
pi1<-l/(l+u)
pi2<-u/(l+u)
H
s
s<-2
H+s
H*s
H
Q+(H*s)
Q
H
s
m<-H*s
m
Q+m
Q
Q+m
0.01*0.02
0.01+.02
-0.01+.02
s
t
(1/(s*t))*log10(pi1*(exp(X)*t))*1)
X<-Q+(H*s)
(1/(s*t))*log10(pi1*(exp(X)*t))*1)
l<-0.01
u<-0.01
h<-0.01
Q<-matrix(c(-l,u,l,-u),2,2)
H<-matrix(c(0,0,0,h),2,2)
V<-matrix(1,2,2)
#Distribución invariante es un vector de probabilidad pi tal que piQ=0, entonces:
pi1<-l/(l+u)
pi2<-u/(l+u)
Q
H
space<-seq(length=30, from=0, to=4000)
time<-seq(length=30, from=0, to=20) #ms
s<-space
t<-time
X<-Q+(H*s)
s
H*s
H*s
l<-0.01
u<-0.01
h<-0.01
Q<-matrix(c(-l,u,l,-u),2,2)
H<-matrix(c(0,0,0,h),2,2)
V<-matrix(1,2,2)
pi1<-l/(l+u)
pi2<-u/(l+u)
space<-seq(length=30, from=0, to=4000)
time<-seq(length=30, from=0, to=20) #ms
s<-space
t<-time
Q
H
s
t
Bw<-function(s,t) {(1/(s*t))*log10(pi1*(exp(Q+(H*s))*t))*1)}
z<-outer(s,t,Bw)     # La función outer evalua la función Bw en cada punto(si,tj)
Bw<-function(s,t) {(1/(s*t))*log10(pi1*(exp(Q+(H*s))*t))*1)}
Bw<-function(s,t) {(1/(s))*log10(pi2+(exp((h*s))*pi1)))}
h
space<-seq(length=30, from=0, to=2)
time<-seq(length=30, from=0, to=20) #ms
s<-space
t<-time
Bw<-function(s,t) {(1/(s))*log10(pi2+(exp((h*s))*pi1)))}
z<-outer(s,t,Bw)     # La función outer evalua la función Bw en cada punto(si,tj)
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=40,phi=0,col = "red", main="Ancho de Banda Efectivo",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
space<-seq(length=30, from=0, to=2)
time<-seq(length=30, from=0, to=20) #ms
s<-space
t<-time
Bw<-function(s,t) {(1/(s))*log10(pi2+(exp((h*s))*pi1)))}
l<-0.01
u<-0.01
h<-0.01
Q<-matrix(c(-l,u,l,-u),2,2)
H<-matrix(c(0,0,0,h),2,2)
V<-matrix(1,2,2)
#Distribución invariante es un vector de probabilidad pi tal que piQ=0, entonces:
pi1<-l/(l+u)
pi2<-u/(l+u)
space<-seq(length=30, from=0, to=2)
time<-seq(length=30, from=0, to=2) #ms
s<-space
t<-time
Bw<-function(s,t) {(1/(s))*log10(pi2+(exp((h*s))*pi1)))}
h
h*s
h*s
exp((h*s)
)
(exp((h*s))*pi1)
pi2+(exp((h*s))*pi1
)
log10(pi2+(exp((h*s))*pi1))
(1/s)*log10(pi2+(exp((h*s))*pi1))
space<-seq(length=30, from=0.01, to=2)
time<-seq(length=30, from=0, to=2) #ms
s<-space
t<-time
Bw<-function(s,t) {(1/s)*log10(pi2+(exp((h*s))*pi1))}
z<-outer(s,t,Bw)     # La función outer evalua la función Bw en cada punto(si,tj)
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=40,phi=0,col = "red", main="Ancho de Banda Efectivo",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
persp(s,t,z,theta=40,phi=0,col = "red", main="Ancho de Banda Efectivo de una fuente ON/OFF",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
persp(s,t,z,theta=40,phi=0,col = "red", main="Ancho de banda efectivo de una fuente ON/OFF",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
s
t
Bw<-function(s,t) {(1/s)*log10(pi2+(exp((h*s))*pi1))}
z<-outer(s,t,Bw)     # La función outer evalua la función Bw en cada punto(si,tj)
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=40,phi=0,col = "red", main="Ancho de banda efectivo de una fuente ON/OFF",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
Bw<-function(s,t) {(1/(s*t))*log10(pi1*(exp(Q+(H*s))*t))*1)}
z<-outer(s,t,Bw)     # La función outer evalua la función Bw en cada punto(si,tj)
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=40,phi=0,col = "blue", main="Ancho de banda efectivo de una fuente ON/OFF",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
space<-seq(length=30, from=2, to=0.01)
time<-seq(length=30, from=0.01, to=2) #ms
s<-space
t<-time
Bw<-function(s,t) {(1/s)*log10(pi2+(exp((h*s))*pi1))}
z<-outer(s,t,Bw)     # La función outer evalua la función Bw en cada punto(si,tj)
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=40,phi=0,col = "red", main="Ancho de banda efectivo de una fuente ON/OFF",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
s<-log10(space)
t<-log10(time)
Bw<-function(s,t) {(1/s)*log10(pi2+(exp((h*s))*pi1))}
z<-outer(s,t,Bw)     # La función outer evalua la función Bw en cada punto(si,tj)
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=40,phi=0,col = "red", main="Ancho de banda efectivo de una fuente ON/OFF",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
space<-seq(length=30, from=0.01, to=2)
time<-seq(length=30, from=0.01, to=2) #ms
s<-log10(space)
t<-log10(time)
Bw<-function(s,t) {(1/s)*log10(pi2+(exp((h*s))*pi1))}
z<-outer(s,t,Bw)     # La función outer evalua la función Bw en cada punto(si,tj)
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=40,phi=0,col = "red", main="Ancho de banda efectivo de una fuente ON/OFF",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
s<-(space)
t<-(time)
Bw<-function(s,t) {(1/s)*log10(pi2+(exp((h*s))*pi1))}
z<-outer(s,t,Bw)     # La función outer evalua la función Bw en cada punto(si,tj)
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=30,phi=0,col = "red", main="Ancho de banda efectivo de una fuente ON/OFF",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
ln<-0.01012
un<-0.01034
Qn<-matrix(c(-ln,un,ln,-un),2,2)
Qn
h
l<-0.01012
u<-0.01034
h<-0.01
Qn<-matrix(c(-l,u,l,-u),2,2)
Qn
pi1<-l/(l+u)
pi2<-u/(l+u)
space<-seq(length=30, from=0.01, to=2)
time<-seq(length=30, from=0.01, to=2) #ms
s<-(space)
t<-(time)
Bw<-function(s,t) {(1/s)*log10(pi2+(exp((h*s))*pi1))}
z<-outer(s,t,Bw)     # La función outer evalua la función Bw en cada punto(si,tj)
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=30,phi=0,col = "green", main="Ancho de banda efectivo de una fuente ON/OFF",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=30,phi=0,col = "green", main="Estimación de ancho de banda efectivo de una fuente ON/OFF",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
z<-outer(s,t,Bw)     # La función outer evalua la función Bw en cada punto(si,tj)
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=30,phi=0,col = "green", sub="Ancho de banda efectivo de una fuente ON/OFF"ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=30,phi=0,col = "green", sub="Ancho de banda efectivo de una fuente ON/OFF",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
C<-37
B<-5
u<-35.09
var<-25.53
H<-0.75
s<-(B+(C+u)*t)/(var*t^(2*H)) #0.0355
t<-(B/(C-u))*(H/(1-H))      #8
s
C<-37
B<-5
u<-35.09
var<-25.53
H<-0.75
s<-(B+(C+u)*t)/(var*t^(2*H)) #0.0355
t<-(B/(C-u))*(H/(1-H))      #8
s
t
Bw_MFB<-u+(((s*var)/2)*(t^(2*H-1)))
Bw_MFB
bmdata <- bm(x0=1, t0=0.01, t=2, n=1000)
plot(bmdata, xlab="time (s)",ylab="Packets",main="Brownian motion trace")
library(somebm)
bmdata <- bm(x0=1, t0=0.01, t=2, n=1000)
plot(bmdata, xlab="time (s)",ylab="Packets",main="Brownian motion trace")
plot(bellx,belly,type="l",xlab="time (s)",ylab="Packets",main="Bellcore trace", ylim=c(0,500))
tail(bellx)
tail(belly)
head(bellx,1000)
head(bellx,1002)
head(bellx,1020)
head(bellx,1050)
head(bellx,1030)
head(bellx,1026)
head(bellx,1025)
set_belly<-head(belly,1025)
set_bellx<-head(bellx,1025)
plot(set_bellx,set_belly,type="l",xlab="time (s)",ylab="Packets",main="Muestra Bellcore trace", ylim=c(0,500))
head(bellx,10)
install.packages("quantmod")
library("quantmod", lib.loc="~/R/win-library/3.1")
p=findPeaks(belly, 300)
p
points(p, belly[p])
p
head(belly)
p=findPeaks(set_belly, 300)
points(p, set_belly[p])
p
p=findPeaks(set_belly, 3)
points(p, set_belly[p])
p
p=findPeaks(set_belly, 200)
points(p, set_belly[p])
p
p=findPeaks(set_belly, 200)
points(p, set_belly[p],col="red")
p
p=findPeaks(set_bellx, 200)
points(p, set_bellx[p],col="blue")
p
p=findPeaks(set_bellx, 20)
points(p, set_bellx[p],col="GREEN")
p
p=findPeaks(set_bellx, 2)
points(p, set_bellx[p],col="GREEN")
p
plot(sin(seq(1,10,.1))[p])
plot(sin(seq(1,10,.1)),type='l')
points(p,sin(seq(1,10,.1))[p])
plot(sin(seq(1,10,.1))[p])
plot(sin(seq(1,10,.1)),type='l')
points(p,sin(seq(1,10,.1))[p],col="red")
points(p,sin(seq(1,10,.1))[p],col="red")
plot(set_bellx,set_belly,type="l",xlab="time (ms)",ylab="Packets",main="Muestra Bellcore trace", ylim=c(0,500))
p=findPeaks(set_bellx, 2)
points(p, set_bellx[p],col="GREEN")
p
p=findPeaks(set_bellY, 2)
points(p, set_bellY[p],col="GREEN")
p
p=findPeaks(set_bellY, 2)
points(p, set_bellY[p],col="GREEN")
p
p=findPeaks(set_belly, 2)
points(p, set_belly[p],col="GREEN")
p
p=findPeaks(set_belly, 300)
points(p, set_belly[p],col="GREEN")
p
p=findPeaks(set_belly, 250)
points(p, set_belly[p],col="GREEN")
p
head(belly)
plot(set_bellx,set_belly,type="l",xlab="time (ms)",ylab="Packets",main="Muestra Bellcore trace", ylim=c(0,500))
lines(300, y=NULL, type="l", col="blue")
p=findPeaks(set_belly, 250)
points(p, set_belly[p],col="GREEN")
p
p=findPeaks(set_belly, 250)
points(p, set_belly[p],col="red")
p
s<-1
h<-3  #Mbps
t<-1  #ms
M<-c(0,1,2,3)
m<-M  #Mbps
alpha<-(1/(s*t))*log10(1+((m/h)*(exp(s*h*t)-1)))
b<-(exp(s*h*t)-1)/(s*t*(h+(m*(exp(s*h*t)-1))))   #per unit volume
a<-alpha-(m*b)  #per unit time
f<-a+(b*M)
slope<-(alpha[3]-alpha[2])/(M[3]-M[2])
fline<-(slope*(M-1))+alpha[2]
plot(M,alpha,ylab="Ancho de Banda Efectivo [Mbps]",xlab="Tasa Medida [Mbps]",type="o",col="darkblue",lwd=2, main="Función de Ancho de Banda Efectivo" )
abline(v=M[2],h=alpha[2],lty=3,col="dodgerblue")
text(M[2],alpha[2]-0.5, "Punto Óptimo")
points(M[2],alpha[2],lwd=2,col="chocolate1",pch=21)
fline<-(slope*M)+(alpha[2]-slope)
lines(M,fline,col="orange")
slope
M
plot(set_bellx,set_belly,type="l",xlab="time (ms)",ylab="Packets",main="Muestra Bellcore trace", ylim=c(0,500))
abline(v=0,h=300,lty=3,col="dodgerblue")
plot(set_bellx,set_belly,type="l",xlab="time (ms)",ylab="Packets",main="Muestra Bellcore trace", ylim=c(0,500))
abline(v=NULL,h=350,lty=3,col="dodgerblue")
plot(set_bellx,set_belly,type="l",xlab="time (ms)",ylab="Packets",main="Muestra Bellcore trace", ylim=c(0,500))
abline(v=NULL,h=400,lty=3,col="dodgerblue")
abline(v=NULL,h=80,lty=3,col="dodgerblue")
abline(v=NULL,h=50,lty=3,col="dodgerblue")
abline(v=NULL,h=40,lty=3,col="dodgerblue")
abline(v=NULL,h=30,lty=3,col="dodgerblue")
plot(set_bellx,set_belly,type="l",xlab="time (ms)",ylab="Packets",main="Muestra Bellcore trace", ylim=c(0,500))
abline(v=NULL,h=400,lty=3,col="dodgerblue")
abline(v=NULL,h=35,lty=3,col="dodgerblue")
plot(set_bellx,set_belly,type="l",xlab="time (ms)",ylab="Packets",main="Muestra Bellcore trace", ylim=c(0,500))
abline(v=NULL,h=400,lty=3,col="grey")
abline(v=NULL,h=35,lty=3,col="grey")
p=findPeaks(set_belly,300)
p
plot(set_bellx,set_belly,type="l",xlab="time (ms)",ylab="Packets",main="Muestra Bellcore trace", ylim=c(0,500))
abline(v=NULL,h=400,lty=3,col="green")
abline(v=NULL,h=35,lty=3,col="gren")
