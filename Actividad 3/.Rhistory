s<-1
h<-3  #Mbps
t<-c(0.001,0.01,0.1,1) #ms
M<-c(0,1,2,3)
m<-M  #Mbps
time<-t
alpha<-(1/(s*t))*log10(1+((m/h)*(exp(s*h*t)-1)))
b<-(exp(s*h*t)-1)/(s*t*(h+(m*(exp(s*h*t)-1))))   #per unit volume
a<-alpha-(m*b)  #per unit time
f<-a+(b*M)
slope<-(alpha[3]-alpha[2])/(M[3]-M[2])
fline<-(slope*(M-1))+alpha[2]
plot(M,alpha,ylab="Ancho de Banda Efectivo [Mbps]",xlab="Tasa Medida [Mbps]",type="o",col="darkblue",lwd=2, main="Función de Ancho de Banda Efectivo" )
abline(v=M[2],h=alpha[2],lty=3,col="dodgerblue")
text(M[2],alpha[2]-0.5, "Punto Óptimo")
points(M[2],alpha[2],lwd=2,col="chocolate1",pch=21)
fline<-(slope*M)+(alpha[2]-slope)
lines(M,fline,col="orange")
s3d<-scatterplot3d(M,time,alpha,highlight.3d = TRUE,color="blue",type="l")
s3d$points3d(M,time,alpha,pch=20,col="red")
t
s<-c(0.04,0.16,0.64,2.56)
h<-3  #Mbps
t<-c(0.001,0.01,0.1,1) #ms
M<-c(0,1,2,3)
m<-M  #Mbps
time<-t
alpha<-(1/(s*t))*log10(1+((m/h)*(exp(s*h*t)-1)))
b<-(exp(s*h*t)-1)/(s*t*(h+(m*(exp(s*h*t)-1))))   #per unit volume
a<-alpha-(m*b)  #per unit time
f<-a+(b*M)
slope<-(alpha[3]-alpha[2])/(M[3]-M[2])
fline<-(slope*(M-1))+alpha[2]
plot(M,alpha,ylab="Ancho de Banda Efectivo [Mbps]",xlab="Tasa Medida [Mbps]",type="o",col="darkblue",lwd=2, main="Función de Ancho de Banda Efectivo" )
abline(v=M[2],h=alpha[2],lty=3,col="dodgerblue")
text(M[2],alpha[2]-0.5, "Punto Óptimo")
points(M[2],alpha[2],lwd=2,col="chocolate1",pch=21)
fline<-(slope*M)+(alpha[2]-slope)
lines(M,fline,col="orange")
s3d<-scatterplot3d(M,time,alpha,highlight.3d = TRUE,color="blue",type="l")
s3d$points3d(M,time,alpha,pch=20,col="red")
s<-1#c(0.04,0.16,0.64,2.56)
h<-3  #Mbps
t<-c(0.001,0.01,0.1,1) #ms
M<-c(0,1,2,3)
m<-M  #Mbps
time<-t
alpha<-(1/(s*t))*log10(1+((m/h)*(exp(s*h*t)-1)))
b<-(exp(s*h*t)-1)/(s*t*(h+(m*(exp(s*h*t)-1))))   #per unit volume
a<-alpha-(m*b)  #per unit time
f<-a+(b*M)
slope<-(alpha[3]-alpha[2])/(M[3]-M[2])
fline<-(slope*(M-1))+alpha[2]
plot(M,alpha,ylab="Ancho de Banda Efectivo [Mbps]",xlab="Tasa Medida [Mbps]",type="o",col="darkblue",lwd=2, main="Función de Ancho de Banda Efectivo" )
abline(v=M[2],h=alpha[2],lty=3,col="dodgerblue")
text(M[2],alpha[2]-0.5, "Punto Óptimo")
points(M[2],alpha[2],lwd=2,col="chocolate1",pch=21)
fline<-(slope*M)+(alpha[2]-slope)
lines(M,fline,col="orange")
s3d<-scatterplot3d(M,time,alpha,highlight.3d = TRUE,color="blue",type="l")
s3d$points3d(M,time,alpha,pch=20,col="red")
s3d<-scatterplot3d(s,time,alpha,highlight.3d = TRUE,color="blue",type="l")
s3d$points3d(s,time,alpha,pch=20,col="red")
M
s
s<-c(0.04,0.16,0.64,2.56)
h<-3  #Mbps
t<-c(0.001,0.01,0.1,1) #ms
M<-c(0,1,2,3)
m<-M  #Mbps
time<-t
alpha<-(1/(s*t))*log10(1+((m/h)*(exp(s*h*t)-1)))
b<-(exp(s*h*t)-1)/(s*t*(h+(m*(exp(s*h*t)-1))))   #per unit volume
a<-alpha-(m*b)  #per unit time
f<-a+(b*M)
slope<-(alpha[3]-alpha[2])/(M[3]-M[2])
fline<-(slope*(M-1))+alpha[2]
plot(M,alpha,ylab="Ancho de Banda Efectivo [Mbps]",xlab="Tasa Medida [Mbps]",type="o",col="darkblue",lwd=2, main="Función de Ancho de Banda Efectivo" )
abline(v=M[2],h=alpha[2],lty=3,col="dodgerblue")
text(M[2],alpha[2]-0.5, "Punto Óptimo")
points(M[2],alpha[2],lwd=2,col="chocolate1",pch=21)
fline<-(slope*M)+(alpha[2]-slope)
lines(M,fline,col="orange")
s3d<-scatterplot3d(s,time,alpha,highlight.3d = TRUE,color="blue",type="l")
s3d$points3d(s,time,alpha,pch=20,col="red")
s3d<-scatterplot3d(s,time,alpha,highlight.3d = TRUE,color="blue",type="l")
s3d$points3d(s,time,alpha,pch=20,col="red")
plot(M,alpha,ylab="Ancho de Banda Efectivo [Mbps]",xlab="Tasa Medida [Mbps]",type="o",col="darkblue",lwd=2, main="Función de Ancho de Banda Efectivo" )
abline(v=M[2],h=alpha[2],lty=3,col="dodgerblue")
text(M[2],alpha[2]-0.5, "Punto Óptimo")
points(M[2],alpha[2],lwd=2,col="chocolate1",pch=21)
fline<-(slope*M)+(alpha[2]-slope)
lines(M,fline,col="orange")
s<-1#c(0.04,0.16,0.64,2.56)
h<-3  #Mbps
t<-c(0.001,0.01,0.1,1) #ms
M<-c(0,1,2,3)
m<-M  #Mbps
time<-t
alpha<-(1/(s*t))*log10(1+((m/h)*(exp(s*h*t)-1)))
b<-(exp(s*h*t)-1)/(s*t*(h+(m*(exp(s*h*t)-1))))   #per unit volume
a<-alpha-(m*b)  #per unit time
f<-a+(b*M)
slope<-(alpha[3]-alpha[2])/(M[3]-M[2])
fline<-(slope*(M-1))+alpha[2]
plot(M,alpha,ylab="Ancho de Banda Efectivo [Mbps]",xlab="Tasa Medida [Mbps]",type="o",col="darkblue",lwd=2, main="Función de Ancho de Banda Efectivo" )
abline(v=M[2],h=alpha[2],lty=3,col="dodgerblue")
text(M[2],alpha[2]-0.5, "Punto Óptimo")
points(M[2],alpha[2],lwd=2,col="chocolate1",pch=21)
fline<-(slope*M)+(alpha[2]-slope)
lines(M,fline,col="orange")
s<-1#c(0.04,0.16,0.64,2.56)
h<-3  #Mbps
t<-c(0.001,0.01,0.1,1) #ms
M<-c(0,1,2,3)
m<-1  #Mbps
time<-t
alpha<-(1/(s*t))*log10(1+((m/h)*(exp(s*h*t)-1)))
b<-(exp(s*h*t)-1)/(s*t*(h+(m*(exp(s*h*t)-1))))   #per unit volume
a<-alpha-(m*b)  #per unit time
f<-a+(b*M)
slope<-(alpha[3]-alpha[2])/(M[3]-M[2])
fline<-(slope*(M-1))+alpha[2]
plot(M,alpha,ylab="Ancho de Banda Efectivo [Mbps]",xlab="Tasa Medida [Mbps]",type="o",col="darkblue",lwd=2, main="Función de Ancho de Banda Efectivo" )
abline(v=M[2],h=alpha[2],lty=3,col="dodgerblue")
text(M[2],alpha[2]-0.5, "Punto Óptimo")
points(M[2],alpha[2],lwd=2,col="chocolate1",pch=21)
fline<-(slope*M)+(alpha[2]-slope)
lines(M,fline,col="orange")
s<-1#c(0.04,0.16,0.64,2.56)
h<-3  #Mbps
t<-c(0,1,2,3)#c(0.001,0.01,0.1,1) #ms
M<-c(0,1,2,3)
m<-M  #Mbps
time<-t
alpha<-(1/(s*t))*log10(1+((m/h)*(exp(s*h*t)-1)))
b<-(exp(s*h*t)-1)/(s*t*(h+(m*(exp(s*h*t)-1))))   #per unit volume
a<-alpha-(m*b)  #per unit time
f<-a+(b*M)
slope<-(alpha[3]-alpha[2])/(M[3]-M[2])
fline<-(slope*(M-1))+alpha[2]
plot(M,alpha,ylab="Ancho de Banda Efectivo [Mbps]",xlab="Tasa Medida [Mbps]",type="o",col="darkblue",lwd=2, main="Función de Ancho de Banda Efectivo" )
abline(v=M[2],h=alpha[2],lty=3,col="dodgerblue")
text(M[2],alpha[2]-0.5, "Punto Óptimo")
points(M[2],alpha[2],lwd=2,col="chocolate1",pch=21)
fline<-(slope*M)+(alpha[2]-slope)
lines(M,fline,col="orange")
s<-1#c(0.04,0.16,0.64,2.56)
h<-3  #Mbps
t<-c(0,1,2,3)#c(0.001,0.01,0.1,1) #ms
M<-c(0,1,2,3)
m<-M  #Mbps
time<-t
alpha<-(1/(s*t))*log10(1+((m/h)*(exp(s*h*t)-1)))
b<-(exp(s*h*t)-1)/(s*t*(h+(m*(exp(s*h*t)-1))))   #per unit volume
a<-alpha-(m*b)  #per unit time
f<-a+(b*M)
slope<-(alpha[3]-alpha[2])/(M[3]-M[2])
fline<-(slope*(M-1))+alpha[2]
plot(M,alpha,ylab="Ancho de Banda Efectivo [Mbps]",xlab="Tasa Medida [Mbps]",type="o",col="darkblue",lwd=2, main="Función de Ancho de Banda Efectivo" )
abline(v=M[2],h=alpha[2],lty=3,col="dodgerblue")
text(M[2],alpha[2]-0.5, "Punto Óptimo")
points(M[2],alpha[2],lwd=2,col="chocolate1",pch=21)
fline<-(slope*M)+(alpha[2]-slope)
lines(M,fline,col="orange")
s<-1#c(0.04,0.16,0.64,2.56)
h<-3  #Mbps
t<-1#c(0.001,0.01,0.1,1) #ms
M<-c(0,1,2,3)
m<-M  #Mbps
time<-c(0.001,0.01,0.1,1) #ms
alpha<-(1/(s*t))*log10(1+((m/h)*(exp(s*h*t)-1)))
b<-(exp(s*h*t)-1)/(s*t*(h+(m*(exp(s*h*t)-1))))   #per unit volume
a<-alpha-(m*b)  #per unit time
f<-a+(b*M)
slope<-(alpha[3]-alpha[2])/(M[3]-M[2])
fline<-(slope*(M-1))+alpha[2]
plot(M,alpha,ylab="Ancho de Banda Efectivo [Mbps]",xlab="Tasa Medida [Mbps]",type="o",col="darkblue",lwd=2, main="Función de Ancho de Banda Efectivo" )
abline(v=M[2],h=alpha[2],lty=3,col="dodgerblue")
text(M[2],alpha[2]-0.5, "Punto Óptimo")
points(M[2],alpha[2],lwd=2,col="chocolate1",pch=21)
fline<-(slope*M)+(alpha[2]-slope)
lines(M,fline,col="orange")
s3d<-scatterplot3d(s,time,alpha,highlight.3d = TRUE,color="blue",type="l")
s3d$points3d(s,time,alpha,pch=20,col="red")
space<-c(0.04,0.16,0.64,2.56)
time<-c(0.001,0.01,0.1,1) #ms
s3d<-scatterplot3d(space,time,alpha,highlight.3d = TRUE,color="blue",type="l")
s3d$points3d(space,time,alpha,pch=20,col="red")
x1<-rnorm (100)
x2<-rpois(100,lambda=4)
logist<-function ( x1,x2) {
y<-1/(1+exp((−1)*(−3+0.6*x1+0.5*x2)))}
#par(bg=”white”)
x1r<-range(x1)
x1seq<-seq(x1r[1],x1r[2],length=30)
x2r<-range(x2)
x2seq<-seq(x2r[1],x2r[2],length=30)
z<-outer(x1seq,x2seq,logist)
#persp(x=x1seq,y=x2seq,z=z,theta=−30,zlim=c(−0.2,1.2))
nrz<-nrow(z)
ncz<-ncol(z)
# Create a function interpolating colors in the range of specified colors
jet.colors<-colorRampPalette(c("blue","violet"))
# Generate the desired number of colors from this palette
nbcol<-100
color<-jet.colors(nbcol)
# Compute the z-value at the facet centres
zfacet<-z[−1,−1]+z[−1,−ncz]+z[−nrz,−1] +z[−nrz,−ncz]
# Recode facet z-values into color indices
facetcol<-cut(zfacet,nbcol)
persp(x=x1seq,y=x2seq,z=z,col=color[facetcol],theta=−60,zlim=c(−0.2,1),xlab="ms",ylab="Mbps",zlab="(s,t)")
x1
x2
z
x = seq(-10,10,length=50)         # Generamos una malla de puntos (x,y)
y = x
f = function(x,y) { x^2 - y^2 }   # Definimos la función que dibujaremos
z = outer(x,y,f)     # La función outer evalua la función f en cada
punto(xi,yj)
persp(x,y,z)                    # Un gráfico en perspectiva
persp(x,y,z,theta=30,phi=30)    # Otro
x
space<-seq(length=30, from=0.1, to=1)
space
time<-seq(length=30, from=1, to=150) #ms
time
time<-seq(length=30, from=0.1, to=1) #ms
Bw<-function(s,t) {(1/(s*t))*log10(1+((m/h)*(exp(s*h*t)-1)))}
z<-outer(s,t,Bw)     # La función outer evalua la función Bw en cada punto(si,tj)
a
space<-seq(length=30, from=0.1, to=1)
time<-seq(length=30, from=0.1, to=1) #ms
s<-space
t<-time
# Definimos la función que dibujaremos
Bw<-function(s,t) {(1/(s*t))*log10(1+((m/h)*(exp(s*h*t)-1)))}
z<-outer(s,t,Bw)     # La función outer evalua la función Bw en cada punto(si,tj)
nrz<-nrow(z)
ncz<-ncol(z)
# Create a function interpolating colors in the range of specified colors
jet.colors<-colorRampPalette(c("blue","violet"))
# Generate the desired number of colors from this palette
nbcol<-100
color<-jet.colors(nbcol)
# Compute the z-value at the facet centres
zfacet<-z[−1,−1]+z[−1,−ncz]+z[−nrz,−1] +z[−nrz,−ncz]
facetcol<-cut(zfacet,nbcol)
persp(x=space,y=time,z=Bw,col=color[facetcol],theta=−60,zlim=c(−0.2,1),xlab="parameter",ylab="ms",zlab="(s,t)")
# Definimos la función que dibujaremos
Bw<-function(s,t) {(1/(s*t))*log10(1+((m/h)*(exp(s*h*t)-1)))}
z<-outer(s,t,Bw)     # La función outer evalua la función Bw en cada punto(si,tj)
nrz<-nrow(z)
ncz<-ncol(z)
# Create a function interpolating colors in the range of specified colors
jet.colors<-colorRampPalette(c("blue","violet"))
# Generate the desired number of colors from this palette
nbcol<-100
color<-jet.colors(nbcol)
# Compute the z-value at the facet centres
zfacet<-z[−1,−1]+z[−1,−ncz]+z[−nrz,−1] +z[−nrz,−ncz]
# Recode facet z-values into color indices
facetcol<-cut(zfacet,nbcol)
persp(x=space,y=time,z=Bw,col=color[facetcol],theta=−60,zlim=c(−0.2,1),xlab="parameter",ylab="ms",zlab="(s,t)")
Bw
Bw(0.1,0.6)
m<-1
h<-3
# Definimos la función que dibujaremos
Bw<-function(s,t) {(1/(s*t))*log10(1+((m/h)*(exp(s*h*t)-1)))}
z<-outer(s,t,Bw)     # La función outer evalua la función Bw en cada punto(si,tj)
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=30,phi=30)    # Otro
persp(s,t,z,theta=60,phi=30)    # Otro
persp(s,t,z,theta=60,phi=20)    # Otro
persp(s,t,z,theta=30,phi=20)    # Otro
persp(s,t,z,theta=50,phi=20)    # Otro
persp(s,t,z,theta=50,phi=-20)    # Otro
persp(s,t,z,theta=40,phi=-20)    # Otro
persp(s,t,z,theta=60,phi=-20)    # Otro
persp(s,t,z,theta=100,phi=-20)    # Otro
persp(s,t,z,theta=100,phi=20)    # Otro
persp(s,t,z,theta=100,phi=30)    # Otro
persp(s,t,z,theta=100,phi=80)    # Otro
persp(s,t,z,theta=100,phi=0)    # Otro
persp(s,t,z,theta=100,phi=10)    # Otro
persp(s,t,z,theta=80,phi=10)    # Otro
persp(s,t,z,theta=-10,phi=10)    # Otro
persp(s,t,z,theta=-10,phi=50)    # Otro
persp(s,t,z,theta=-30,phi=30)    # Otro
persp(s,t,z,theta=100,phi=30)    # Otro
persp(s,t,z,theta=0,phi=0)    # Otro
persp(s,t,z,theta=20,phi=0)    # Otro
persp(s,t,z,theta=50,phi=0)    # Otro
persp(s,t,z,theta=40,phi=0)    # Otro
persp(s,t,z,theta=40,phi=10)    # Otro
persp(s,t,z,theta=40,phi=20)    # Otro
persp(s,t,z,theta=50,phi=20)    # Otro
persp(s,t,z,theta=20,phi=20)    # Otro
persp(s,t,z,theta=30,phi=20)    # Otro
persp(s,t,z,theta=30,phi=20, col=blue)    # Otro
persp(s,t,z,theta=30,phi=20, col="blue#)    # Otro
persp(s,t,z,theta=30,phi=20, col="blue")    # Otro
persp(s,t,z,theta=30,phi=20, expand = 0.5, col = "lightblue")    # Otro
persp(s,t,z,theta=30,phi=20, expand = 1, col = "lightblue")    # Otro
persp(s,t,z,theta=-30,phi=20,col = "lightblue")
persp(s,t,z,theta=50,phi=20,col = "lightblue")
persp(s,t,z,theta=30,phi=20,col = "lightblue")
persp(s,t,z,theta=30,phi=20,col = "lightblue")
persp(s,t,z,theta=30,phi=20,col = "lightblue",axes="TRUE")
persp(s,t,z,theta=30,phi=20,col = "lightblue",axes="FALSE")
persp(s,t,z,theta=30,phi=20,col = "lightblue")
persp(s,t,z,theta=30,phi=20,col = "lightblue", main="Ancho de Banda Efectivo")
persp(s,t,z,theta=30,phi=20,col = "lightblue", main="Ancho de Banda Efectivo",ticktype = "detailed")
persp(s,t,z,theta=30,phi=20,col = "lightblue", main="Ancho de Banda Efectivo",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
s3d<-scatterplot3d(space,time,alpha,highlight.3d = TRUE,color="blue",type="l")
s3d$points3d(space,time,alpha,pch=20,col="red")
space<-seq(length=30, from=0.1, to=1)
time<-seq(length=30, from=0.1, to=2) #ms
s<-space
t<-time
m<-1
h<-3
# Definimos la función que dibujaremos
Bw<-function(s,t) {(1/(s*t))*log10(1+((m/h)*(exp(s*h*t)-1)))}
z<-outer(s,t,Bw)     # La función outer evalua la función Bw en cada punto(si,tj)
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=30,phi=20,col = "lightblue", main="Ancho de Banda Efectivo",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
persp(s,t,z,theta=50,phi=20,col = "lightblue", main="Ancho de Banda Efectivo",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
persp(s,t,z,theta=50,phi=30,col = "lightblue", main="Ancho de Banda Efectivo",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
persp(s,t,z,theta=10,phi=30,col = "lightblue", main="Ancho de Banda Efectivo",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
persp(s,t,z,theta=10,phi=-10,col = "lightblue", main="Ancho de Banda Efectivo",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
persp(s,t,z,theta=10,phi=0,col = "lightblue", main="Ancho de Banda Efectivo",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
persp(s,t,z,theta=40,phi=0,col = "lightblue", main="Ancho de Banda Efectivo",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
packets<-read.csv
("C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Bellcore/BC-pAug89.xls",header=TRUE,
sep=";",na.strings="NA",dec=".")
packets<-read.csv
("C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Bellcore/BC-pAug89.xls",header=TRUE,
sep=";",na.strings="NA",dec=",")
packets<-read.csv
("C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Bellcore/BC-pAug89.csv",header=TRUE,
sep=";",na.strings="NA",dec=".")
packets<-read.csv("C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Bellcore/BC-pAug89.csv",
header=TRUE,sep=";",na.strings="NA",dec=".")
packets<-read.csv("C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Bellcore/BC-pAug89.csv",
header=TRUE,sep=";",na.strings="NA",dec=".")
head(packets)
plot(M,alpha,ylab="Ancho de Banda Efectivo [Mbps]",xlab="Tasa Medida [Mbps]",type="o",col="darkblue",lwd=2, main="Función de Ancho de Banda Efectivo" )
abline(v=M[2],h=alpha[2],lty=3,col="dodgerblue")
text(M[2],alpha[2]-0.5, "Punto Óptimo")
points(M[2],alpha[2],lwd=2,col="chocolate1",pch=21)
fline<-(slope*M)+(alpha[2]-slope)
lines(M,fline,col="orange")
space<-seq(length=30, from=0.1, to=1)
time<-seq(length=30, from=0.1, to=2) #ms
s<-space
t<-time
m<-1
h<-3
az<-(1/s)*(log10(z)-(1/z))
bz<-(exp(s*h)-1)/(s*z*h)
alphaz<-(1/s)*(log10(z))
plot(z,alphaz)
lines(z,alphaz)
Bw<-function(s,t) {(1/(s*t))*log10(1+((m/h)*(exp(s*h*t)-1)))}
z<-outer(s,t,Bw)     # La función outer evalua la función Bw en cada punto(si,tj)
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=40,phi=0,col = "lightblue", main="Ancho de Banda Efectivo",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=40,phi=0,col = "lightblue", main="Ancho de Banda Efectivo",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)",width=480,height=480)
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=40,phi=0,col = "lightblue", main="Ancho de Banda Efectivo",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)",expand=1)
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=40,phi=0,col = "lightblue", main="Ancho de Banda Efectivo",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)",expand=1)
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=40,phi=0,col = "lightblue", main="Ancho de Banda Efectivo",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)",expand=0)
persp(s,t,z)                    # Un gráfico en perspectiva
persp(s,t,z,theta=40,phi=0,col = "lightblue", main="Ancho de Banda Efectivo",ticktype = "detailed",xlab="s",ylab="time (ms)",zlab="(s,t)")
head(packets)
plot(packets)
0.001340-0.001508
0.001340*1000
0.001508 *1000
1.508-1.34
head(packets,20)
0.045324*1000
head(packets,25)
dataset<-data.frame(Time=packets$Time..sec.,Bytes=packets$Ethernet.data.length..bytes.)
head(datset)
head(dataset,20)
x<- head(dataset,20)
x<- head(dataset,50)
x
0.050360*1000
apply(x,5,sort)
dataset<-data.frame(Time=packets$Time..sec.*1000,Bytes=packets$Ethernet.data.length..bytes.)
dataset<-data.frame(packets$Time..sec.*1000,Bytes=packets$Ethernet.data.length..bytes.)
y<-packets$Time..sec.*1000
y<-packets$Time..sec.
head(y)
y*1000
head(y)
head(y)*1000
as.list(y)
m<-as.list(y)
m<-as.list(head(y))
m
m<-as.vector(head(y))
m
m*1000
as.numeric(m)
as.numeric(m)*1000
m<-as.numeric(head(y))
m
Time<-as.numeric(as.vector(packets$Time..sec.))
Time<-(as.vector(packets$Time..sec.))
head(Time)
as.numeric(head(Time))
Time_seg<-as.numeric(Time)
Time_seg
summary(Time_seg)
head(packets)
head(packets,50)
head(packets,100)
cls
clear
xl
xls
cw
clear window
x
x$Time[2]
round(x$Time,3)
plot(dataset)
head(dataset)
dataset<-data.frame(packets$Time..sec.,Bytes=packets$Ethernet.data.length..bytes.)
head(dataset)
plot(dataset)
library("ggplot2", lib.loc="~/R/win-library/3.1")
x
plot(x)
qplot(x)
qplot(x$Time,y$Bytes)
qplot(x$Time,x$Bytes)
packets<-read.csv("C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Bellcore/BC-pAug89.csv",header=TRUE,sep=";",na.strings="NA",dec=",")
dataset<-data.frame(packets$Time..sec.,Bytes=packets$Ethernet.data.length..bytes.)
head(packets)
m<-head(packets)
x<-head(dataset)
x$Time
x
dataset<-data.frame(Time=packets$Time..sec.,Bytes=packets$Ethernet.data.length..bytes.)
x<-head(dataset)
x$Time
x$Time*1000
as.number(x$Time)
as.numeric(x$Time)
y<-as.vector(x$Time)
as.numeric(y)
m<-head(trace,100)
plot(m)
line(m,col="green")
m
m<-head(trace,100)
m
head(packet)
packets<-read.csv("C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Bellcore/
BC-pAug89.csv",header=TRUE,sep=";",na.strings="NA",dec=",")
dataset<-data.frame(Seconds=packets$Seconds,Bytes=packets$Bytes)
packets<-read.csv("C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Bellcore/                  BC-pAug89.csv",
header=TRUE,sep=";",na.strings="NA",dec=",")
packets<-read.csv("C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Bellcore/                  BC-pAug89.csv",header=TRUE,sep=";",na.strings="NA",dec=",")
packets<-read.csv("C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Bellcore/                  BC-pAug89.csv",header=TRUE,sep=";",na.strings="NA",dec=",")
packets<-read.csv("C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Bellcore/                  BC-pAug89.csv",header=TRUE,sep=";",na.strings="NA",dec=".")
packets<-read.csv("C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Bellcore/              BC-pAug89.csv",header=TRUE,sep=";",na.strings="NA",dec=".")
head(packets)
packets<-read.csv("C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Bellcore/              BC-pAug89.csv",header=TRUE,sep=";",na.strings="NA",dec=".")
packets<-read.csv("C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Bellcore/BC-pAug89.csv",header=TRUE,sep=";",na.strings="NA",dec=".")
head(packets)
packets<-read.csv("C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Bellcore/BC-pAug89.csv",header=TRUE,sep=";",na.strings="NA",dec=".")
head(packets)
dataset<-data.frame(Seconds=packets$Seconds,Bytes=packets$Bytes)
t<-as.vector(dataset$Seconds)
sec<-as.numeric(t)
dataset<-data.frame(Seconds=packets$Seconds,Bytes=packets$Bytes)
t<-as.vector(dataset$Seconds)
sec<-as.numeric(t)
head(t,1000)
```{r}
packets<-read("C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Bellcore/BC-pAug89.txt",header=TRUE,sep=";",na.strings="NA",dec=".")
packets<-read.table("C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Bellcore/BC-pAug89.txt",header=TRUE,sep=";",na.strings="NA",dec=".")
head(packets)
packets<-read.csv("C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Bellcore/BC-pAug89.csv",header=TRUE,sep=";",na.strings="NA",dec=".")
head(packets)
packets<-read.csv("C:/Users/NataliaA/Documents/Maestria/Tráfico L3/Bellcore/BC-pAug89.csv",header=TRUE,sep=";",na.strings="NA",dec=".")
head(packets)
head(packets,1000)
head(packets,2000)
head(packets,20)
packets$Data[900000]
packets$Data[90000]
packets$Data[1000000]
head(packets)
dataset<-data.frame(Seconds=packets$Seconds,Bytes=packets$Bytes)
head(dataset)
head(dataset,1000)
head(dataset,2000)
write.table(dataset,file="BCpAug89")
head(dataset)
head(dataset)*1000
write.table(dataset,file="BC_pAug89.txt")
